var _;
function equals_6(other){
  return (this == null?null:this) === (other == null?null:other);
}

function getClass_95(){
  return Ljava_lang_Object_2_classLit;
}

function hashCode_7(){
  return this.$H || (this.$H = ++sNextHashId);
}

function toString_12(){
  return (this.typeMarker$ == nullMethod || this.typeId$ == 2?this.getClass$():Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName + '@' + toPowerOfTwoString(this.typeMarker$ == nullMethod || this.typeId$ == 2?this.hashCode$():this.$H || (this.$H = ++sNextHashId), 4);
}

function Object_0(){
}

_ = Object_0.prototype = {};
_.equals$ = equals_6;
_.getClass$ = getClass_95;
_.hashCode$ = hashCode_7;
_.toString$ = toString_12;
_.toString = function(){
  return this.toString$();
}
;
_.typeMarker$ = nullMethod;
_.typeId$ = 1;
function $initCause(this$static, cause){
  if (this$static.cause) {
    throw $IllegalStateException(new IllegalStateException(), "Can't overwrite cause");
  }
  if (cause == this$static) {
    throw $IllegalArgumentException(new IllegalArgumentException(), 'Self-causation not permitted');
  }
  this$static.cause = cause;
  return this$static;
}

function $toString_3(this$static){
  var className, msg;
  className = this$static.getClass$().typeName;
  msg = this$static.detailMessage;
  if (msg != null) {
    return className + ': ' + msg;
  }
   else {
    return className;
  }
}

function getClass_100(){
  return Ljava_lang_Throwable_2_classLit;
}

function toString_16(){
  return $toString_3(this);
}

function Throwable(){
}

_ = Throwable.prototype = new Object_0();
_.getClass$ = getClass_100;
_.toString$ = toString_16;
_.typeId$ = 3;
_.cause = null;
_.detailMessage = null;
function $Exception(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_89(){
  return Ljava_lang_Exception_2_classLit;
}

function Exception(){
}

_ = Exception.prototype = new Throwable();
_.getClass$ = getClass_89;
_.typeId$ = 4;
function $RuntimeException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_96(){
  return Ljava_lang_RuntimeException_2_classLit;
}

function RuntimeException(){
}

_ = RuntimeException.prototype = new Exception();
_.getClass$ = getClass_96;
_.typeId$ = 5;
function $JavaScriptException(this$static, e){
  $Exception(this$static, '(' + getName(e) + '): ' + getDescription(e) + (e != null && (e.typeMarker$ != nullMethod && e.typeId$ != 2)?getProperties0(dynamicCastJso(e)):''));
  getName(e);
  getDescription(e);
  getException(e);
  return this$static;
}

function getClass_0(){
  return Lcom_google_gwt_core_client_JavaScriptException_2_classLit;
}

function getDescription(e){
  if (e != null && (e.typeMarker$ != nullMethod && e.typeId$ != 2)) {
    return getDescription0(dynamicCastJso(e));
  }
   else {
    return e + '';
  }
}

function getDescription0(e){
  return e == null?null:e.message;
}

function getException(e){
  if (e != null && (e.typeMarker$ != nullMethod && e.typeId$ != 2)) {
    return dynamicCastJso(e);
  }
   else {
    return null;
  }
}

function getName(e){
  if (e == null) {
    return 'null';
  }
   else if (e != null && (e.typeMarker$ != nullMethod && e.typeId$ != 2)) {
    return getName0(dynamicCastJso(e));
  }
   else if (e != null && canCast(e.typeId$, 1)) {
    return 'String';
  }
   else {
    return (e.typeMarker$ == nullMethod || e.typeId$ == 2?e.getClass$():Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;
  }
}

function getName0(e){
  return e == null?null:e.name;
}

function getProperties0(e){
  var result = '';
  try {
    for (prop in e) {
      if (prop != 'name' && (prop != 'message' && prop != 'toString')) {
        try {
          result += '\n ' + prop + ': ' + e[prop];
        }
         catch (ignored) {
        }
      }
    }
  }
   catch (ignored) {
  }
  return result;
}

function JavaScriptException(){
}

_ = JavaScriptException.prototype = new RuntimeException();
_.getClass$ = getClass_0;
_.typeId$ = 6;
function createFunction(){
  return function(){
  }
  ;
}

function equals__devirtual$(this$static, other){
  return this$static.typeMarker$ == nullMethod || this$static.typeId$ == 2?this$static.equals$(other):(this$static == null?null:this$static) === (other == null?null:other);
}

function hashCode__devirtual$(this$static){
  return this$static.typeMarker$ == nullMethod || this$static.typeId$ == 2?this$static.hashCode$():this$static.$H || (this$static.$H = ++sNextHashId);
}

function getHashCode(o){
  return o.$H || (o.$H = ++sNextHashId);
}

var sNextHashId = 0;
function $getParentElement(elem){
  var parent = elem.parentNode;
  if (parent == null) {
    return null;
  }
  if (parent.nodeType != 1)
    parent = null;
  return parent;
}

function $setInnerText(elem, text){
  while (elem.firstChild) {
    elem.removeChild(elem.firstChild);
  }
  if (text != null) {
    elem.appendChild($doc.createTextNode(text));
  }
}

function $getAbsoluteTop(elem){
  var style = $doc.defaultView.getComputedStyle(elem, null);
  var top = $doc.getBoxObjectFor(elem).y - Math.round(style.getPropertyCSSValue('border-top-width').getFloatValue(CSSPrimitiveValue.CSS_PX));
  var parent = elem.parentNode;
  while (parent) {
    if (parent.scrollTop > 0) {
      top -= parent.scrollTop;
    }
    parent = parent.parentNode;
  }
  return top + ($clinit_55() , documentRoot).scrollTop;
}

function $getPropertyString(this$static, name){
  return this$static[name] == null?null:String(this$static[name]);
}

function $Request(this$static, xmlHttpRequest, timeoutMillis, callback){
  if (!xmlHttpRequest) {
    throw new NullPointerException();
  }
  if (!callback) {
    throw new NullPointerException();
  }
  if (timeoutMillis < 0) {
    throw new IllegalArgumentException();
  }
  this$static.timeoutMillis = timeoutMillis;
  this$static.xmlHttpRequest = xmlHttpRequest;
  if (timeoutMillis > 0) {
    this$static.timer = $Request$2(new Request$2(), this$static, callback);
    $schedule(this$static.timer, timeoutMillis);
  }
   else {
    this$static.timer = null;
  }
  return this$static;
}

function $cancel(this$static){
  var xmlHttp;
  if (this$static.xmlHttpRequest) {
    xmlHttp = this$static.xmlHttpRequest;
    this$static.xmlHttpRequest = null;
    xmlHttp.onreadystatechange = nullFunc;
    xmlHttp.abort();
    $cancelTimer(this$static);
  }
}

function $cancelTimer(this$static){
  if (this$static.timer) {
    $cancel_0(this$static.timer);
  }
}

function $fireOnResponseReceivedImpl(this$static, callback){
  var errorMsg, exception, response_0, xmlHttp, response;
  if (!this$static.xmlHttpRequest) {
    return;
  }
  $cancelTimer(this$static);
  xmlHttp = this$static.xmlHttpRequest;
  this$static.xmlHttpRequest = null;
  errorMsg = getBrowserSpecificFailure(xmlHttp);
  if (errorMsg != null) {
    exception = $RuntimeException(new RuntimeException(), errorMsg);
    callback.onError(this$static, exception);
  }
   else {
    response_0 = (response = $Request$1(new Request$1(), xmlHttp) , response);
    callback.onResponseReceived(this$static, response_0);
  }
}

function $fireOnTimeout(this$static, callback){
  if (!this$static.xmlHttpRequest) {
    return;
  }
  $cancel(this$static);
  callback.onError(this$static, $RequestTimeoutException(new RequestTimeoutException(), this$static.timeoutMillis));
}

function fireOnResponseReceived(callback){
  $fireOnResponseReceivedImpl(this, callback);
}

function getClass_9(){
  return Lcom_google_gwt_http_client_Request_2_classLit;
}

function Request(){
}

_ = Request.prototype = new Object_0();
_.fireOnResponseReceived = fireOnResponseReceived;
_.getClass$ = getClass_9;
_.typeId$ = 0;
_.timeoutMillis = 0;
_.timer = null;
_.xmlHttpRequest = null;
function getClass_10(){
  return Lcom_google_gwt_http_client_Response_2_classLit;
}

function Response(){
}

_ = Response.prototype = new Object_0();
_.getClass$ = getClass_10;
_.typeId$ = 0;
function $Request$1(this$static, val$xmlHttpRequest){
  this$static.val$xmlHttpRequest = val$xmlHttpRequest;
  return this$static;
}

function getClass_2(){
  return Lcom_google_gwt_http_client_Request$1_2_classLit;
}

function Request$1(){
}

_ = Request$1.prototype = new Response();
_.getClass$ = getClass_2;
_.typeId$ = 0;
_.val$xmlHttpRequest = null;
function $clinit_47(){
  $clinit_47 = nullMethod;
  timers = $ArrayList(new ArrayList());
  addWindowCloseListener(new Timer$1());
}

function $cancel_0(this$static){
  if (this$static.isRepeating) {
    $wnd.clearInterval(this$static.timerId);
  }
   else {
    $wnd.clearTimeout(this$static.timerId);
  }
  $remove_7(timers, this$static);
}

function $fireImpl(this$static){
  if (!this$static.isRepeating) {
    $remove_7(timers, this$static);
  }
  $fireOnTimeout(this$static.this$0, this$static.val$callback);
}

function $schedule(this$static, delayMillis){
  if (delayMillis <= 0) {
    throw $IllegalArgumentException(new IllegalArgumentException(), 'must be positive');
  }
  $cancel_0(this$static);
  this$static.isRepeating = false;
  this$static.timerId = createTimeout(this$static, delayMillis);
  $add_6(timers, this$static);
}

function createTimeout(timer, delay){
  return $wnd.setTimeout(function(){
    timer.fire();
  }
  , delay);
}

function fire(){
  $fireImpl(this);
}

function getClass_21(){
  return Lcom_google_gwt_user_client_Timer_2_classLit;
}

function Timer(){
}

_ = Timer.prototype = new Object_0();
_.fire = fire;
_.getClass$ = getClass_21;
_.typeId$ = 0;
_.isRepeating = false;
_.timerId = 0;
var timers;
function $clinit_13(){
  $clinit_13 = nullMethod;
  $clinit_47();
}

function $Request$2(this$static, this$0, val$callback){
  $clinit_13();
  this$static.this$0 = this$0;
  this$static.val$callback = val$callback;
  return this$static;
}

function getClass_3(){
  return Lcom_google_gwt_http_client_Request$2_2_classLit;
}

function Request$2(){
}

_ = Request$2.prototype = new Timer();
_.getClass$ = getClass_3;
_.typeId$ = 7;
_.this$0 = null;
_.val$callback = null;
function $clinit_15(){
  $clinit_15 = nullMethod;
  GET = $RequestBuilder$Method(new RequestBuilder$Method(), 'GET');
  POST = $RequestBuilder$Method(new RequestBuilder$Method(), 'POST');
  nullFunc = createFunction();
}

function $RequestBuilder(this$static, httpMethod, url){
  $clinit_15();
  $RequestBuilder_0(this$static, !httpMethod?null:httpMethod.name_0, url);
  return this$static;
}

function $RequestBuilder_0(this$static, httpMethod, url){
  $clinit_15();
  throwIfEmptyOrNull('httpMethod', httpMethod);
  throwIfEmptyOrNull('url', url);
  this$static.httpMethod = httpMethod;
  this$static.url = url;
  return this$static;
}

function $doSend(this$static, requestData, callback){
  var openError, request, requestPermissionException, sendError, xmlHttpRequest;
  xmlHttpRequest = new XMLHttpRequest();
  openError = open(xmlHttpRequest, this$static.httpMethod, this$static.url, true);
  if (openError != null) {
    requestPermissionException = $RequestPermissionException(new RequestPermissionException(), this$static.url);
    $initCause(requestPermissionException, $RequestException(new RequestException(), openError));
    throw requestPermissionException;
  }
  $setHeaders(this$static, xmlHttpRequest);
  request = $Request(new Request(), xmlHttpRequest, this$static.timeoutMillis, callback);
  sendError = send(xmlHttpRequest, request, requestData, callback);
  if (sendError != null) {
    throw $RequestException(new RequestException(), sendError);
  }
  return request;
}

function $sendRequest(this$static, requestData, callback){
  throwIfNull('callback', callback);
  return $doSend(this$static, requestData, callback);
}

function $setHeader(this$static, header, value){
  throwIfEmptyOrNull('header', header);
  throwIfEmptyOrNull('value', value);
  if (!this$static.headers) {
    this$static.headers = $HashMap(new HashMap());
  }
  $put_0(this$static.headers, header, value);
}

function $setHeaders(this$static, xmlHttpRequest){
  var errorMessage, header, header$iterator;
  if (!!this$static.headers && this$static.headers.size > 0) {
    for (header$iterator = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), this$static.headers).this$0); $hasNext(header$iterator.iter);) {
      header = dynamicCast($next_0(header$iterator.iter), 2);
      errorMessage = setRequestHeader(xmlHttpRequest, dynamicCast(header.getKey(), 1), dynamicCast(header.getValue(), 1));
      if (errorMessage != null) {
        throw $RequestException(new RequestException(), errorMessage);
      }
    }
  }
   else {
    setRequestHeader(xmlHttpRequest, 'Content-Type', 'text/plain; charset=utf-8');
  }
}

function getClass_5(){
  return Lcom_google_gwt_http_client_RequestBuilder_2_classLit;
}

function RequestBuilder(){
}

_ = RequestBuilder.prototype = new Object_0();
_.getClass$ = getClass_5;
_.typeId$ = 0;
_.headers = null;
_.httpMethod = null;
_.timeoutMillis = 0;
_.url = null;
var GET, POST;
function $RequestBuilder$Method(this$static, name){
  this$static.name_0 = name;
  return this$static;
}

function getClass_4(){
  return Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit;
}

function toString_1(){
  return this.name_0;
}

function RequestBuilder$Method(){
}

_ = RequestBuilder$Method.prototype = new Object_0();
_.getClass$ = getClass_4;
_.toString$ = toString_1;
_.typeId$ = 0;
_.name_0 = null;
function $RequestException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_6(){
  return Lcom_google_gwt_http_client_RequestException_2_classLit;
}

function RequestException(){
}

_ = RequestException.prototype = new Exception();
_.getClass$ = getClass_6;
_.typeId$ = 8;
function $RequestPermissionException(this$static, url){
  this$static.detailMessage = 'The URL ' + url + ' is invalid or violates the same-origin security restriction';
  return this$static;
}

function getClass_7(){
  return Lcom_google_gwt_http_client_RequestPermissionException_2_classLit;
}

function RequestPermissionException(){
}

_ = RequestPermissionException.prototype = new RequestException();
_.getClass$ = getClass_7;
_.typeId$ = 9;
function $RequestTimeoutException(this$static, timeoutMillis){
  this$static.detailMessage = 'A request timeout has expired after ' + ('' + timeoutMillis) + ' ms';
  return this$static;
}

function getClass_8(){
  return Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit;
}

function RequestTimeoutException(){
}

_ = RequestTimeoutException.prototype = new RequestException();
_.getClass$ = getClass_8;
_.typeId$ = 10;
function throwIfEmptyOrNull(name, value){
  throwIfNull(name, value);
  if (0 == $trim(value).length) {
    throw $IllegalArgumentException(new IllegalArgumentException(), name + ' cannot be empty');
  }
}

function throwIfNull(name, value){
  if (null == value) {
    throw $NullPointerException(new NullPointerException(), name + ' cannot be null');
  }
}

function getBrowserSpecificFailure(xmlHttpRequest){
  try {
    if (xmlHttpRequest.status === undefined) {
      return 'XmlHttpRequest.status == undefined, please see Safari bug ' + 'http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';
    }
    return null;
  }
   catch (e) {
    return 'Unable to read XmlHttpRequest.status; likely causes are a ' + 'networking error or bad cross-domain request. Please see ' + 'https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more ' + 'details';
  }
}

function open(xmlHttpRequest, httpMethod, url, async){
  try {
    xmlHttpRequest.open(httpMethod, url, async);
    return null;
  }
   catch (e) {
    return e.message || e.toString();
  }
}

function send(xmlHttpRequest, httpRequest, requestData, callback){
  xmlHttpRequest.onreadystatechange = function(){
    if (xmlHttpRequest.readyState == 4) {
      $wnd.setTimeout(function(){
        xmlHttpRequest.onreadystatechange = nullFunc;
      }
      , 0);
      httpRequest.fireOnResponseReceived(callback);
    }
  }
  ;
  try {
    xmlHttpRequest.send(requestData);
    return null;
  }
   catch (e) {
    xmlHttpRequest.onreadystatechange = nullFunc;
    return e.message || e.toString();
  }
}

function setRequestHeader(xmlHttpRequest, header, value){
  try {
    xmlHttpRequest.setRequestHeader(header, value);
    return null;
  }
   catch (e) {
    return e.message || e.toString();
  }
}

function getClass_18(){
  return Lcom_google_gwt_json_client_JSONValue_2_classLit;
}

function isArray_0(){
  return null;
}

function isNumber_0(){
  return null;
}

function isObject_0(){
  return null;
}

function isString_0(){
  return null;
}

function JSONValue(){
}

_ = JSONValue.prototype = new Object_0();
_.getClass$ = getClass_18;
_.isArray = isArray_0;
_.isNumber = isNumber_0;
_.isObject = isObject_0;
_.isString = isString_0;
_.typeId$ = 0;
function $JSONArray(this$static, arr){
  this$static.jsArray = arr;
  return this$static;
}

function $get_0(this$static, index){
  var v = this$static.jsArray[index];
  var func = ($clinit_31() , typeMap)[typeof v];
  return func?func(v):throwUnknownTypeException(typeof v);
}

function equals_0(other){
  if (!(other != null && canCast(other.typeId$, 3))) {
    return false;
  }
  return this.jsArray == dynamicCast(other, 3).jsArray;
}

function getClass_11(){
  return Lcom_google_gwt_json_client_JSONArray_2_classLit;
}

function getUnwrapper(){
  return unwrap;
}

function hashCode_1(){
  return getHashCode(this.jsArray);
}

function isArray(){
  return this;
}

function toString_2(){
  var c, i, sb;
  sb = $StringBuffer(new StringBuffer());
  $append_1(sb.builder, '[');
  for (i = 0 , c = this.jsArray.length; i < c; ++i) {
    if (i > 0) {
      $append_1(sb.builder, ',');
    }
    $append(sb, $get_0(this, i));
  }
  $append_1(sb.builder, ']');
  return $toString_2(sb.builder);
}

function unwrap(value){
  return value.jsArray;
}

function JSONArray(){
}

_ = JSONArray.prototype = new JSONValue();
_.equals$ = equals_0;
_.getClass$ = getClass_11;
_.getUnwrapper = getUnwrapper;
_.hashCode$ = hashCode_1;
_.isArray = isArray;
_.toString$ = toString_2;
_.typeId$ = 11;
_.jsArray = null;
function $clinit_26(){
  $clinit_26 = nullMethod;
  FALSE = $JSONBoolean(new JSONBoolean(), false);
  TRUE = $JSONBoolean(new JSONBoolean(), true);
}

function $JSONBoolean(this$static, value){
  $clinit_26();
  this$static.value = value;
  return this$static;
}

function getClass_12(){
  return Lcom_google_gwt_json_client_JSONBoolean_2_classLit;
}

function getInstance(b){
  $clinit_26();
  if (b) {
    return TRUE;
  }
   else {
    return FALSE;
  }
}

function getUnwrapper_0(){
  return unwrap_0;
}

function toString_3(){
  return $clinit_144() , '' + this.value;
}

function unwrap_0(value){
  return value.value;
}

function JSONBoolean(){
}

_ = JSONBoolean.prototype = new JSONValue();
_.getClass$ = getClass_12;
_.getUnwrapper = getUnwrapper_0;
_.toString$ = toString_3;
_.typeId$ = 0;
_.value = false;
var FALSE, TRUE;
function $JSONException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function $JSONException_0(this$static, cause){
  this$static.detailMessage = !cause?null:$toString_3(cause);
  this$static.cause = cause;
  return this$static;
}

function getClass_13(){
  return Lcom_google_gwt_json_client_JSONException_2_classLit;
}

function JSONException(){
}

_ = JSONException.prototype = new RuntimeException();
_.getClass$ = getClass_13;
_.typeId$ = 12;
function $clinit_28(){
  $clinit_28 = nullMethod;
  instance = ($clinit_28() , new JSONNull());
}

function getClass_14(){
  return Lcom_google_gwt_json_client_JSONNull_2_classLit;
}

function getUnwrapper_1(){
  return unwrap_1;
}

function toString_4(){
  return 'null';
}

function unwrap_1(){
  return null;
}

function JSONNull(){
}

_ = JSONNull.prototype = new JSONValue();
_.getClass$ = getClass_14;
_.getUnwrapper = getUnwrapper_1;
_.toString$ = toString_4;
_.typeId$ = 0;
var instance;
function $JSONNumber(this$static, value){
  this$static.value = value;
  return this$static;
}

function equals_1(other){
  if (!(other != null && canCast(other.typeId$, 4))) {
    return false;
  }
  return this.value == dynamicCast(other, 4).value;
}

function getClass_15(){
  return Lcom_google_gwt_json_client_JSONNumber_2_classLit;
}

function getUnwrapper_2(){
  return unwrap_2;
}

function hashCode_2(){
  return ~~Math.max(Math.min($Double(new Double(), this.value).value, 2147483647), -2147483648);
}

function isNumber(){
  return this;
}

function toString_5(){
  return this.value + '';
}

function unwrap_2(value){
  return value.value;
}

function JSONNumber(){
}

_ = JSONNumber.prototype = new JSONValue();
_.equals$ = equals_1;
_.getClass$ = getClass_15;
_.getUnwrapper = getUnwrapper_2;
_.hashCode$ = hashCode_2;
_.isNumber = isNumber;
_.toString$ = toString_5;
_.typeId$ = 13;
_.value = 0;
function $JSONObject(this$static){
  this$static.jsObject = {};
  return this$static;
}

function $JSONObject_0(this$static, jsValue){
  this$static.jsObject = jsValue;
  return this$static;
}

function $addAllKeys(this$static, s){
  var jsObject = this$static.jsObject;
  for (var key in jsObject) {
    s.add_0(key);
  }
}

function $get_1(this$static, key){
  var v, func;
  if (key == null) {
    throw new NullPointerException();
  }
  return v = this$static.jsObject[key] , func = ($clinit_31() , typeMap)[typeof v] , func?func(v):throwUnknownTypeException(typeof v);
}

function $put(this$static, key, jsonValue){
  var previous;
  if (key == null) {
    throw new NullPointerException();
  }
  previous = $get_1(this$static, key);
  $put0(this$static, key, jsonValue);
  return previous;
}

function $put0(this$static, key, value){
  if (value) {
    var func = value.getUnwrapper();
    this$static.jsObject[key] = func(value);
  }
   else {
    delete this$static.jsObject[key];
  }
}

function $toString_1(this$static){
  var first, key, key$iterator, keys, sb;
  sb = $StringBuffer(new StringBuffer());
  $append_1(sb.builder, '{');
  first = true;
  keys = $ArrayList(new ArrayList());
  $addAllKeys(this$static, keys);
  for (key$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), keys); key$iterator.i < key$iterator.this$0.size_0();) {
    key = dynamicCast($next_0(key$iterator), 1);
    if (first) {
      first = false;
    }
     else {
      $append_1(sb.builder, ', ');
    }
    $append_0(sb, escapeValue(key));
    $append_1(sb.builder, ':');
    $append(sb, $get_1(this$static, key));
  }
  $append_1(sb.builder, '}');
  return $toString_2(sb.builder);
}

function equals_2(other){
  if (!(other != null && canCast(other.typeId$, 5))) {
    return false;
  }
  return this.jsObject == dynamicCast(other, 5).jsObject;
}

function getClass_16(){
  return Lcom_google_gwt_json_client_JSONObject_2_classLit;
}

function getUnwrapper_3(){
  return unwrap_3;
}

function hashCode_3(){
  return getHashCode(this.jsObject);
}

function isObject(){
  return this;
}

function toString_6(){
  return $toString_1(this);
}

function unwrap_3(value){
  return value.jsObject;
}

function JSONObject(){
}

_ = JSONObject.prototype = new JSONValue();
_.equals$ = equals_2;
_.getClass$ = getClass_16;
_.getUnwrapper = getUnwrapper_3;
_.hashCode$ = hashCode_3;
_.isObject = isObject;
_.toString$ = toString_6;
_.typeId$ = 14;
_.jsObject = null;
function $clinit_31(){
  $clinit_31 = nullMethod;
  typeMap = {'boolean':createBoolean, number:createNumber, string:createString, object:createObject_0, 'function':createObject_0, undefined:createUndefined};
}

function createBoolean(v){
  return getInstance(v);
}

function createNumber(v){
  return $JSONNumber(new JSONNumber(), v);
}

function createObject_0(o){
  if (!o) {
    return $clinit_28() , instance;
  }
  var v = o.valueOf?o.valueOf():o;
  if (v !== o) {
    var func = typeMap[typeof v];
    return func?func(v):throwUnknownTypeException(typeof v);
  }
   else if (o instanceof Array || o instanceof $wnd.Array) {
    return $JSONArray(new JSONArray(), o);
  }
   else {
    return $JSONObject_0(new JSONObject(), o);
  }
}

function createString(v){
  return $JSONString(new JSONString(), v);
}

function createUndefined(){
  return null;
}

function parse(jsonString){
  var v, func;
  $clinit_31();
  var $e0, ex;
  if (jsonString == null) {
    throw new NullPointerException();
  }
  if (jsonString.length == 0) {
    throw $IllegalArgumentException(new IllegalArgumentException(), 'empty argument');
  }
  try {
    return v = eval('(' + jsonString + ')') , func = typeMap[typeof v] , func?func(v):throwUnknownTypeException(typeof v);
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 6)) {
      ex = $e0;
      throw $JSONException_0(new JSONException(), ex);
    }
     else 
      throw $e0;
  }
}

function throwUnknownTypeException(typeString){
  $clinit_31();
  throw $JSONException(new JSONException(), "Unexpected typeof result '" + typeString + "'; please report this bug to the GWT team");
}

var typeMap;
function $clinit_32(){
  var out;
  $clinit_32 = nullMethod;
  escapeTable = (out = ['\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004', '\\u0005', '\\u0006', '\\u0007', '\\b', '\\t', '\\n', '\\u000B', '\\f', '\\r', '\\u000E', '\\u000F', '\\u0010', '\\u0011', '\\u0012', '\\u0013', '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018', '\\u0019', '\\u001A', '\\u001B', '\\u001C', '\\u001D', '\\u001E', '\\u001F'] , out[34] = '\\"' , out[92] = '\\\\' , out);
}

function $JSONString(this$static, value){
  $clinit_32();
  if (value == null) {
    throw new NullPointerException();
  }
  this$static.value = value;
  return this$static;
}

function equals_3(other){
  if (!(other != null && canCast(other.typeId$, 7))) {
    return false;
  }
  return $equals_0(this.value, dynamicCast(other, 7).value);
}

function escapeValue(toEscape){
  $clinit_32();
  var s = toEscape.replace(/[\x00-\x1F"\\]/g, function(x){
    var lookedUp;
    return lookedUp = escapeTable[x.charCodeAt(0)] , lookedUp == null?x:lookedUp;
  }
  );
  return '"' + s + '"';
}

function getClass_17(){
  return Lcom_google_gwt_json_client_JSONString_2_classLit;
}

function getUnwrapper_4(){
  return unwrap_4;
}

function hashCode_4(){
  return getHashCode_0(this.value);
}

function isString(){
  return this;
}

function toString_7(){
  return escapeValue(this.value);
}

function unwrap_4(value){
  return value.value;
}

function JSONString(){
}

_ = JSONString.prototype = new JSONValue();
_.equals$ = equals_3;
_.getClass$ = getClass_17;
_.getUnwrapper = getUnwrapper_4;
_.hashCode$ = hashCode_4;
_.isString = isString;
_.toString$ = toString_7;
_.typeId$ = 15;
_.value = null;
var escapeTable;
function createFromSeed(seedType, length){
  var seedArray = [null, 0, false, [0, 0]];
  var value = seedArray[seedType];
  var array = new Array(length);
  for (var i = 0; i < length; ++i) {
    array[i] = value;
  }
  return array;
}

function getClass_19(){
  return this.arrayClass$;
}

function initDim(arrayClass, typeId, queryId, length, seedType){
  var result;
  result = createFromSeed(seedType, length);
  initValues(arrayClass, typeId, queryId, result);
  return result;
}

function initValues(arrayClass, typeId, queryId, array){
  if (!protoTypeArray_0) {
    protoTypeArray_0 = new Array_0();
  }
  wrapArray(array, protoTypeArray_0);
  array.arrayClass$ = arrayClass;
  array.typeId$ = typeId;
  array.queryId$ = queryId;
  return array;
}

function setCheck(array, index, value){
  if (value != null) {
    if (array.queryId$ > 0 && !canCastUnsafe(value.typeId$, array.queryId$)) {
      throw new ArrayStoreException();
    }
    if (array.queryId$ < 0 && (value.typeMarker$ == nullMethod || value.typeId$ == 2)) {
      throw new ArrayStoreException();
    }
  }
  return array[index] = value;
}

function wrapArray(array, protoTypeArray){
  for (var i in protoTypeArray) {
    var toCopy = protoTypeArray[i];
    if (toCopy) {
      array[i] = toCopy;
    }
  }
  return array;
}

function Array_0(){
}

_ = Array_0.prototype = new Object_0();
_.getClass$ = getClass_19;
_.typeId$ = 0;
_.arrayClass$ = null;
_.length = 0;
_.queryId$ = 0;
var protoTypeArray_0 = null;
function canCast(srcId, dstId){
  return srcId && !!typeIdArray[srcId][dstId];
}

function canCastUnsafe(srcId, dstId){
  return srcId && typeIdArray[srcId][dstId];
}

function dynamicCast(src, dstId){
  if (src != null && !canCastUnsafe(src.typeId$, dstId)) {
    throw new ClassCastException();
  }
  return src;
}

function dynamicCastJso(src){
  if (src != null && (src.typeMarker$ == nullMethod || src.typeId$ == 2)) {
    throw new ClassCastException();
  }
  return src;
}

function instanceOf(src, dstId){
  return src != null && canCast(src.typeId$, dstId);
}

var typeIdArray = [{}, {}, {1:1, 26:1, 27:1, 28:1}, {8:1, 26:1}, {8:1, 26:1}, {8:1, 26:1}, {6:1, 8:1, 26:1}, {10:1}, {8:1, 22:1, 26:1}, {8:1, 22:1, 26:1}, {8:1, 22:1, 26:1}, {3:1}, {8:1, 23:1, 26:1}, {4:1}, {5:1}, {7:1}, {11:1, 20:1}, {19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {31:1}, {26:1, 31:1}, {26:1, 31:1}, {26:1, 31:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {26:1, 31:1}, {12:1, 16:1, 17:1, 18:1, 19:1}, {11:1, 20:1}, {12:1, 16:1, 17:1, 18:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 18:1, 19:1}, {9:1, 20:1}, {20:1, 25:1}, {24:1}, {12:1, 15:1, 16:1, 19:1, 20:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 15:1, 16:1, 19:1, 20:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 14:1, 15:1, 16:1, 19:1, 20:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {12:1, 16:1, 19:1}, {8:1, 26:1}, {8:1, 26:1}, {8:1, 26:1}, {8:1, 26:1}, {26:1, 28:1, 29:1}, {8:1, 26:1}, {26:1}, {26:1, 28:1, 30:1}, {8:1, 26:1}, {8:1, 26:1}, {8:1, 26:1}, {8:1, 26:1}, {27:1}, {27:1}, {8:1, 26:1}, {33:1}, {33:1}, {2:1}, {2:1}, {2:1}, {33:1}, {26:1, 32:1}, {26:1, 33:1}, {2:1}, {8:1, 26:1}, {13:1}, {21:1}];
function caught(e){
  if (e != null && canCast(e.typeId$, 8)) {
    return e;
  }
  return $JavaScriptException(new JavaScriptException(), e);
}

function addEventPreview(preview){
  $maybeInitializeEventSystem();
  if (!sEventPreviewStack) {
    sEventPreviewStack = $ArrayList(new ArrayList());
  }
  $add_6(sEventPreviewStack, preview);
}

function dispatchEventImpl(evt, elem, listener){
  var prevCurrentEvent;
  if (elem == sCaptureElem) {
    if ($eventGetTypeInt(evt) == 8192) {
      sCaptureElem = null;
    }
  }
  prevCurrentEvent = currentEvent;
  currentEvent = evt;
  try {
    listener.onBrowserEvent(evt);
  }
   finally {
    currentEvent = prevCurrentEvent;
  }
}

function previewEvent(evt){
  var preview, ret;
  ret = true;
  if (!!sEventPreviewStack && sEventPreviewStack.size > 0) {
    preview = dynamicCast($get_4(sEventPreviewStack, sEventPreviewStack.size - 1), 9);
    if (!(ret = $onEventPreview(preview, evt))) {
      evt.cancelBubble = true;
      evt.preventDefault();
    }
  }
  return ret;
}

function sinkEvents(elem, eventBits){
  $maybeInitializeEventSystem();
  $sinkEventsImpl(elem, eventBits);
  $sinkEventsMozilla(elem, eventBits);
}

var currentEvent = null, sCaptureElem = null, sEventPreviewStack = null;
function $clinit_45(){
  $clinit_45 = nullMethod;
  impl = ($clinit_57() , $clinit_58() , $clinit_59() , new HistoryImplMozilla());
  if (!$init(impl)) {
    impl = null;
  }
}

function newItem(historyToken, issueEvent){
  $clinit_45();
  if (impl) {
    $newItem(impl, historyToken, issueEvent);
  }
}

var impl = null;
function getClass_20(){
  return Lcom_google_gwt_user_client_Timer$1_2_classLit;
}

function onWindowClosed(){
  while (($clinit_47() , timers).size > 0) {
    $cancel_0(dynamicCast($get_4(timers, 0), 10));
  }
}

function onWindowClosing(){
  return null;
}

function Timer$1(){
}

_ = Timer$1.prototype = new Object_0();
_.getClass$ = getClass_20;
_.onWindowClosed = onWindowClosed;
_.onWindowClosing = onWindowClosing;
_.typeId$ = 16;
function addWindowCloseListener(listener){
  maybeInitializeHandlers();
  if (!closingListeners) {
    closingListeners = $ArrayList(new ArrayList());
  }
  $add_6(closingListeners, listener);
}

function addWindowResizeListener(listener){
  maybeInitializeHandlers();
  if (!resizeListeners) {
    resizeListeners = $ArrayList(new ArrayList());
  }
  $add_6(resizeListeners, listener);
}

function fireClosedImpl(){
  var listener, listener$iterator;
  if (closingListeners) {
    for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), closingListeners); listener$iterator.i < listener$iterator.this$0.size_0();) {
      listener = dynamicCast($next_0(listener$iterator), 11);
      listener.onWindowClosed();
    }
  }
}

function fireClosingImpl(){
  var listener, listener$iterator, msg, ret;
  ret = null;
  if (closingListeners) {
    for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), closingListeners); listener$iterator.i < listener$iterator.this$0.size_0();) {
      listener = dynamicCast($next_0(listener$iterator), 11);
      msg = listener.onWindowClosing();
      ret = msg;
    }
  }
  return ret;
}

function fireResizedImpl(){
  var listener, listener$iterator;
  if (resizeListeners) {
    for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), resizeListeners); listener$iterator.i < listener$iterator.this$0.size_0();) {
      listener = dynamicCast($next_0(listener$iterator), 9);
      $onWindowResized(listener, (($clinit_55() , documentRoot).clientWidth , documentRoot.clientHeight));
    }
  }
}

function init(){
  __gwt_initHandlers(function(){
    fireResizedImpl();
  }
  , function(){
    return fireClosingImpl();
  }
  , function(){
    fireClosedImpl();
  }
  );
}

function maybeInitializeHandlers(){
  if (!handlersAreInitialized) {
    init();
    handlersAreInitialized = true;
  }
}

var closingListeners = null, handlersAreInitialized = false, resizeListeners = null;
function $eventGetTypeInt(evt){
  switch (evt.type) {
    case 'blur':
      return 4096;
    case 'change':
      return 1024;
    case 'click':
      return 1;
    case 'dblclick':
      return 2;
    case 'focus':
      return 2048;
    case 'keydown':
      return 128;
    case 'keypress':
      return 256;
    case 'keyup':
      return 512;
    case 'load':
      return 32768;
    case 'losecapture':
      return 8192;
    case 'mousedown':
      return 4;
    case 'mousemove':
      return 64;
    case 'mouseout':
      return 32;
    case 'mouseover':
      return 16;
    case 'mouseup':
      return 8;
    case 'scroll':
      return 16384;
    case 'error':
      return 65536;
    case 'mousewheel':
      return 131072;
    case 'DOMMouseScroll':
      return 131072;
    case 'contextmenu':
      return 262144;
  }
}

function $maybeInitializeEventSystem(){
  if (!eventSystemIsInitialized) {
    $initEventSystem();
    $initSyntheticMouseUpEvents();
    eventSystemIsInitialized = true;
  }
}

function isMyListener(object){
  return object != null && canCast(object.typeId$, 12) && !(object != null && (object.typeMarker$ != nullMethod && object.typeId$ != 2));
}

var eventSystemIsInitialized = false;
function $initEventSystem(){
  dispatchCapturedMouseEvent = function(evt){
    if (dispatchCapturedEvent(evt)) {
      var cap = captureElem;
      if (cap && cap.__listener) {
        if (isMyListener(cap.__listener)) {
          dispatchEventImpl(evt, cap, cap.__listener);
          evt.stopPropagation();
        }
      }
    }
  }
  ;
  dispatchCapturedEvent = function(evt){
    if (!previewEvent(evt)) {
      evt.stopPropagation();
      evt.preventDefault();
      return false;
    }
    return true;
  }
  ;
  dispatchEvent_0 = function(evt){
    var listener, curElem = this;
    while (curElem && !(listener = curElem.__listener)) {
      curElem = curElem.parentNode;
    }
    if (curElem && curElem.nodeType != 1) {
      curElem = null;
    }
    if (listener) {
      if (isMyListener(listener)) {
        dispatchEventImpl(evt, curElem, listener);
      }
    }
  }
  ;
  $wnd.addEventListener('click', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('dblclick', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mousedown', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mouseup', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mousemove', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mouseover', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mouseout', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('mousewheel', dispatchCapturedMouseEvent, true);
  $wnd.addEventListener('keydown', dispatchCapturedEvent, true);
  $wnd.addEventListener('keyup', dispatchCapturedEvent, true);
  $wnd.addEventListener('keypress', dispatchCapturedEvent, true);
}

function $sinkEventsImpl(elem, bits){
  var chMask = (elem.__eventBits || 0) ^ bits;
  elem.__eventBits = bits;
  if (!chMask)
    return;
  if (chMask & 1)
    elem.onclick = bits & 1?dispatchEvent_0:null;
  if (chMask & 2)
    elem.ondblclick = bits & 2?dispatchEvent_0:null;
  if (chMask & 4)
    elem.onmousedown = bits & 4?dispatchEvent_0:null;
  if (chMask & 8)
    elem.onmouseup = bits & 8?dispatchEvent_0:null;
  if (chMask & 16)
    elem.onmouseover = bits & 16?dispatchEvent_0:null;
  if (chMask & 32)
    elem.onmouseout = bits & 32?dispatchEvent_0:null;
  if (chMask & 64)
    elem.onmousemove = bits & 64?dispatchEvent_0:null;
  if (chMask & 128)
    elem.onkeydown = bits & 128?dispatchEvent_0:null;
  if (chMask & 256)
    elem.onkeypress = bits & 256?dispatchEvent_0:null;
  if (chMask & 512)
    elem.onkeyup = bits & 512?dispatchEvent_0:null;
  if (chMask & 1024)
    elem.onchange = bits & 1024?dispatchEvent_0:null;
  if (chMask & 2048)
    elem.onfocus = bits & 2048?dispatchEvent_0:null;
  if (chMask & 4096)
    elem.onblur = bits & 4096?dispatchEvent_0:null;
  if (chMask & 8192)
    elem.onlosecapture = bits & 8192?dispatchEvent_0:null;
  if (chMask & 16384)
    elem.onscroll = bits & 16384?dispatchEvent_0:null;
  if (chMask & 32768)
    elem.onload = bits & 32768?dispatchEvent_0:null;
  if (chMask & 65536)
    elem.onerror = bits & 65536?dispatchEvent_0:null;
  if (chMask & 131072)
    elem.onmousewheel = bits & 131072?dispatchEvent_0:null;
  if (chMask & 262144)
    elem.oncontextmenu = bits & 262144?dispatchEvent_0:null;
}

var captureElem = null, dispatchCapturedEvent = null, dispatchCapturedMouseEvent = null, dispatchEvent_0 = null;
function $initSyntheticMouseUpEvents(){
  $wnd.addEventListener('mouseout', function(evt){
    var cap = $wnd.__captureElem;
    if (cap && !evt.relatedTarget) {
      if ('html' == evt.target.tagName.toLowerCase()) {
        var muEvent = $doc.createEvent('MouseEvents');
        muEvent.initMouseEvent('mouseup', true, true, $wnd, 0, evt.screenX, evt.screenY, evt.clientX, evt.clientY, evt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, evt.button, null);
        cap.dispatchEvent(muEvent);
      }
    }
  }
  , true);
  $wnd.addEventListener('DOMMouseScroll', dispatchCapturedMouseEvent, true);
}

function $sinkEventsMozilla(elem, bits){
  if (bits & 131072) {
    elem.addEventListener('DOMMouseScroll', dispatchEvent_0, false);
  }
}

function $clinit_55(){
  $clinit_55 = nullMethod;
  documentRoot = $getDocumentRoot(($clinit_55() , new DocumentRootImpl()));
}

function $getDocumentRoot(){
  return $doc.compatMode == 'CSS1Compat'?$doc.documentElement:$doc.body;
}

function getClass_22(){
  return Lcom_google_gwt_user_client_impl_DocumentRootImpl_2_classLit;
}

function DocumentRootImpl(){
}

_ = DocumentRootImpl.prototype = new Object_0();
_.getClass$ = getClass_22;
_.typeId$ = 0;
var documentRoot;
var nullFunc = null;
function $clinit_59(){
  $clinit_59 = nullMethod;
  historyListeners = $ArrayList(new ArrayList());
}

function $newItem(this$static, historyToken, issueEvent){
  historyToken = historyToken == null?'':historyToken;
  if (!$equals_0(historyToken, ($clinit_59() , $wnd.__gwt_historyToken || ''))) {
    $wnd.__gwt_historyToken = historyToken;
    $nativeUpdate(this$static, historyToken);
    if (issueEvent) {
      fireHistoryChangedImpl(historyToken);
    }
  }
}

function decodeFragment_0(encodedFragment){
  return decodeURI(encodedFragment.replace('%23', '#'));
}

function encodeFragment(fragment){
  return encodeURI(fragment).replace('#', '%23');
}

function fireHistoryChangedImpl(historyToken){
  $clinit_59();
  var listener$array, listener$index, listener$max, listenersToInvoke;
  listenersToInvoke = dynamicCast($toArray(historyListeners, initDim(_3Lcom_google_gwt_user_client_HistoryListener_2_classLit, 83, 25, historyListeners.size, 0)), 13);
  for (listener$array = listenersToInvoke , listener$index = 0 , listener$max = listener$array.length; listener$index < listener$max; ++listener$index) {
    $onHistoryChanged(historyToken);
  }
}

function getClass_25(){
  return Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit;
}

function newItemOnEvent(historyToken){
  historyToken = historyToken == null?'':historyToken;
  if (!$equals_0(historyToken, ($clinit_59() , $wnd.__gwt_historyToken || ''))) {
    $wnd.__gwt_historyToken = historyToken;
    this.nativeUpdateOnEvent(historyToken);
    fireHistoryChangedImpl(historyToken);
  }
}

function HistoryImpl(){
}

_ = HistoryImpl.prototype = new Object_0();
_.decodeFragment = decodeFragment_0;
_.encodeFragment = encodeFragment;
_.getClass$ = getClass_25;
_.newItemOnEvent = newItemOnEvent;
_.typeId$ = 0;
var historyListeners;
function $clinit_58(){
  $clinit_58 = nullMethod;
  $clinit_59();
}

function $init(this$static){
  var token_0 = '';
  var hash_0 = $wnd.location.hash;
  if (hash_0.length > 0) {
    token_0 = this$static.decodeFragment(hash_0.substring(1));
  }
  $wnd.__gwt_historyToken = token_0;
  var historyImpl = this$static;
  $wnd.__checkHistory = function(){
    $wnd.setTimeout($wnd.__checkHistory, 250);
    var token = '', hash = $wnd.location.hash;
    if (hash.length > 0) {
      token = historyImpl.decodeFragment(hash.substring(1));
    }
    historyImpl.newItemOnEvent(token);
  }
  ;
  $wnd.__checkHistory();
  return true;
}

function getClass_24(){
  return Lcom_google_gwt_user_client_impl_HistoryImplStandard_2_classLit;
}

function nativeUpdateOnEvent(historyToken){
}

function HistoryImplStandard(){
}

_ = HistoryImplStandard.prototype = new HistoryImpl();
_.getClass$ = getClass_24;
_.nativeUpdateOnEvent = nativeUpdateOnEvent;
_.typeId$ = 0;
function $clinit_57(){
  $clinit_57 = nullMethod;
  $clinit_58();
}

function $nativeUpdate(this$static, historyToken){
  if (historyToken.length == 0) {
    var s = $wnd.location.href;
    var i = s.indexOf('#');
    if (i != -1)
      s = s.substring(0, i);
    $wnd.location = s + '#';
  }
   else {
    $wnd.location.hash = this$static.encodeFragment(historyToken);
  }
}

function decodeFragment(encodedFragment){
  return encodedFragment;
}

function getClass_23(){
  return Lcom_google_gwt_user_client_impl_HistoryImplMozilla_2_classLit;
}

function HistoryImplMozilla(){
}

_ = HistoryImplMozilla.prototype = new HistoryImplStandard();
_.decodeFragment = decodeFragment;
_.getClass$ = getClass_23;
_.typeId$ = 0;
function $addStyleName(this$static, style){
  setStyleName(this$static.element, style, true);
}

function $removeStyleName(this$static, style){
  setStyleName(this$static.element, style, false);
}

function $replaceElement(this$static, elem){
  if (this$static.element) {
    $replaceNode(this$static.element, elem);
  }
  this$static.element = elem;
}

function $replaceNode(node, newNode){
  var p = node.parentNode;
  if (!p) {
    return;
  }
  p.insertBefore(newNode, node);
  p.removeChild(node);
}

function $setElement(this$static, elem){
  this$static.element = elem;
}

function $setHeight(this$static, height){
  this$static.element.style['height'] = height;
}

function $setTitle(this$static, title){
  if (title == null || title.length == 0) {
    this$static.element.removeAttribute('title');
  }
   else {
    this$static.element.setAttribute('title', title);
  }
}

function getClass_53(){
  return Lcom_google_gwt_user_client_ui_UIObject_2_classLit;
}

function getStylePrimaryName(elem){
  var fullClassName, spaceIdx;
  fullClassName = elem['className'] == null?null:String(elem['className']);
  spaceIdx = fullClassName.indexOf(fromCodePoint(32));
  if (spaceIdx >= 0) {
    return fullClassName.substr(0, spaceIdx - 0);
  }
  return fullClassName;
}

function setStyleName(elem, style, add){
  var begin, end, idx, last, lastPos, newClassName, oldStyle;
  if (!elem) {
    throw $RuntimeException(new RuntimeException(), 'Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');
  }
  style = $trim(style);
  if (style.length == 0) {
    throw $IllegalArgumentException(new IllegalArgumentException(), 'Style names cannot be empty');
  }
  oldStyle = elem['className'] == null?null:String(elem['className']);
  idx = oldStyle.indexOf(style);
  while (idx != -1) {
    if (idx == 0 || oldStyle.charCodeAt(idx - 1) == 32) {
      last = idx + style.length;
      lastPos = oldStyle.length;
      if (last == lastPos || last < lastPos && oldStyle.charCodeAt(last) == 32) {
        break;
      }
    }
    idx = oldStyle.indexOf(style, idx + 1);
  }
  if (add) {
    if (idx == -1) {
      if (oldStyle.length > 0) {
        oldStyle += ' ';
      }
      elem['className'] = oldStyle + style;
    }
  }
   else {
    if (idx != -1) {
      begin = $trim(oldStyle.substr(0, idx - 0));
      end = $trim($substring(oldStyle, idx + style.length));
      if (begin.length == 0) {
        newClassName = end;
      }
       else if (end.length == 0) {
        newClassName = begin;
      }
       else {
        newClassName = begin + ' ' + end;
      }
      elem['className'] = newClassName;
    }
  }
}

function toString_8(){
  var temp, tempDiv;
  if (!this.element) {
    return '(null handle)';
  }
  return temp = this.element.cloneNode(true) , tempDiv = $doc.createElement('DIV') , tempDiv.appendChild(temp) , outer = tempDiv.innerHTML , temp.innerHTML = '' , outer;
}

function UIObject(){
}

_ = UIObject.prototype = new Object_0();
_.getClass$ = getClass_53;
_.toString$ = toString_8;
_.typeId$ = 17;
_.element = null;
function $onAttach(this$static){
  if (this$static.isAttached()) {
    throw $IllegalStateException(new IllegalStateException(), "Should only call onAttach when the widget is detached from the browser's document");
  }
  this$static.attached = true;
  this$static.element.__listener = this$static;
  this$static.doAttachChildren();
  this$static.onLoad();
}

function $removeFromParent(this$static){
  if (instanceOf(this$static.parent, 18)) {
    dynamicCast(this$static.parent, 18).remove(this$static);
  }
   else if (this$static.parent) {
    throw $IllegalStateException(new IllegalStateException(), "This widget's parent does not implement HasWidgets");
  }
}

function $replaceElement_0(this$static, elem){
  if (this$static.attached) {
    this$static.element.__listener = null;
  }
  $replaceElement(this$static, elem);
  if (this$static.attached) {
    this$static.element.__listener = this$static;
  }
}

function $setParent(this$static, parent){
  var oldParent;
  oldParent = this$static.parent;
  if (!parent) {
    if (!!oldParent && oldParent.isAttached()) {
      this$static.onDetach();
    }
    this$static.parent = null;
  }
   else {
    if (oldParent) {
      throw $IllegalStateException(new IllegalStateException(), 'Cannot set a new parent without first clearing the old parent');
    }
    this$static.parent = parent;
    if (parent.isAttached()) {
      this$static.onAttach();
    }
  }
}

function doAttachChildren_0(){
}

function doDetachChildren_0(){
}

function getClass_57(){
  return Lcom_google_gwt_user_client_ui_Widget_2_classLit;
}

function isAttached_0(){
  return this.attached;
}

function onAttach_0(){
  $onAttach(this);
}

function onBrowserEvent_6(event_0){
}

function onDetach_0(){
  if (!this.isAttached()) {
    throw $IllegalStateException(new IllegalStateException(), "Should only call onDetach when the widget is attached to the browser's document");
  }
  try {
    this.onUnload();
  }
   finally {
    this.doDetachChildren();
    this.element.__listener = null;
    this.attached = false;
  }
}

function onLoad_0(){
}

function onUnload_0(){
}

function Widget(){
}

_ = Widget.prototype = new UIObject();
_.doAttachChildren = doAttachChildren_0;
_.doDetachChildren = doDetachChildren_0;
_.getClass$ = getClass_57;
_.isAttached = isAttached_0;
_.onAttach = onAttach_0;
_.onBrowserEvent = onBrowserEvent_6;
_.onDetach = onDetach_0;
_.onLoad = onLoad_0;
_.onUnload = onUnload_0;
_.typeId$ = 18;
_.attached = false;
_.parent = null;
function $clear(this$static){
  var it;
  it = $WidgetCollection$WidgetIterator(new WidgetCollection$WidgetIterator(), this$static.children);
  while (it.index_0 < it.this$0.size - 1) {
    $next(it);
    $remove_2(it);
  }
}

function doAttachChildren(){
  var child, it;
  for (it = this.iterator(); it.hasNext();) {
    child = dynamicCast(it.next(), 16);
    child.onAttach();
  }
}

function doDetachChildren(){
  var child, it;
  for (it = this.iterator(); it.hasNext();) {
    child = dynamicCast(it.next(), 16);
    child.onDetach();
  }
}

function getClass_44(){
  return Lcom_google_gwt_user_client_ui_Panel_2_classLit;
}

function onLoad(){
}

function onUnload(){
}

function Panel(){
}

_ = Panel.prototype = new Widget();
_.doAttachChildren = doAttachChildren;
_.doDetachChildren = doDetachChildren;
_.getClass$ = getClass_44;
_.onLoad = onLoad;
_.onUnload = onUnload;
_.typeId$ = 19;
function $add_0(this$static, child, container){
  $removeFromParent(child);
  $add_5(this$static.children, child);
  container.appendChild(child.element);
  $setParent(child, this$static);
}

function $getWidget(this$static, index){
  return $get_2(this$static.children, index);
}

function $remove(this$static, w){
  var elem;
  if (w.parent != this$static) {
    return false;
  }
  $setParent(w, null);
  elem = w.element;
  $getParentElement(elem).removeChild(elem);
  $remove_4(this$static.children, w);
  return true;
}

function getClass_30(){
  return Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit;
}

function iterator(){
  return $WidgetCollection$WidgetIterator(new WidgetCollection$WidgetIterator(), this.children);
}

function remove_0(w){
  return $remove(this, w);
}

function ComplexPanel(){
}

_ = ComplexPanel.prototype = new Panel();
_.getClass$ = getClass_30;
_.iterator = iterator;
_.remove = remove_0;
_.typeId$ = 20;
function $add(this$static, w){
  $add_0(this$static, w, this$static.element);
}

function changeToStaticPositioning(elem){
  elem.style['left'] = '';
  elem.style['top'] = '';
  elem.style['position'] = '';
}

function getClass_26(){
  return Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit;
}

function remove(w){
  var removed;
  removed = $remove(this, w);
  if (removed) {
    changeToStaticPositioning(w.element);
  }
  return removed;
}

function AbsolutePanel(){
}

_ = AbsolutePanel.prototype = new ComplexPanel();
_.getClass$ = getClass_26;
_.remove = remove;
_.typeId$ = 21;
function $CellPanel(this$static){
  this$static.children = $WidgetCollection(new WidgetCollection(), this$static);
  this$static.table = $doc.createElement('table');
  this$static.body_0 = $doc.createElement('tbody');
  this$static.table.appendChild(this$static.body_0);
  this$static.element = this$static.table;
  return this$static;
}

function $getWidgetTd(this$static, w){
  if (w.parent != this$static) {
    return null;
  }
  return $getParentElement(w.element);
}

function $setCellHorizontalAlignment(this$static, w, align){
  var td;
  td = $getWidgetTd(this$static, w);
  if (td) {
    td['align'] = align.textAlignString;
  }
}

function $setCellVerticalAlignment(this$static, w, align){
  var td;
  td = $getWidgetTd(this$static, w);
  if (td) {
    td.style['verticalAlign'] = align.verticalAlignString;
  }
}

function getClass_27(){
  return Lcom_google_gwt_user_client_ui_CellPanel_2_classLit;
}

function CellPanel(){
}

_ = CellPanel.prototype = new ComplexPanel();
_.getClass$ = getClass_27;
_.typeId$ = 22;
_.body_0 = null;
_.table = null;
function $advanceToFind(iter, o){
  var t;
  while (iter.hasNext()) {
    t = iter.next();
    if (o == null?t == null:equals__devirtual$(o, t)) {
      return iter;
    }
  }
  return null;
}

function $toString_4(this$static){
  var comma, iter, sb;
  sb = $StringBuffer(new StringBuffer());
  comma = null;
  $append_1(sb.builder, '[');
  iter = this$static.iterator();
  while (iter.hasNext()) {
    if (comma != null) {
      $append_1(sb.builder, comma);
    }
     else {
      comma = ', ';
    }
    $append_0(sb, '' + iter.next());
  }
  $append_1(sb.builder, ']');
  return $toString_2(sb.builder);
}

function add_0(o){
  throw $UnsupportedOperationException(new UnsupportedOperationException(), 'Add not supported on this collection');
}

function contains(o){
  var iter;
  iter = $advanceToFind(this.iterator(), o);
  return !!iter;
}

function getClass_102(){
  return Ljava_util_AbstractCollection_2_classLit;
}

function toString_17(){
  return $toString_4(this);
}

function AbstractCollection(){
}

_ = AbstractCollection.prototype = new Object_0();
_.add_0 = add_0;
_.contains = contains;
_.getClass$ = getClass_102;
_.toString$ = toString_17;
_.typeId$ = 0;
function add_2(obj){
  this.add(this.size_0(), obj);
  return true;
}

function add_1(index, element){
  throw $UnsupportedOperationException(new UnsupportedOperationException(), 'Add not supported on this list');
}

function checkIndex(index, size){
  if (index < 0 || index >= size) {
    indexOutOfBounds(index, size);
  }
}

function equals_8(o){
  var elem, elemOther, iter, iterOther, other;
  if ((o == null?null:o) === (this == null?null:this)) {
    return true;
  }
  if (!(o != null && canCast(o.typeId$, 31))) {
    return false;
  }
  other = dynamicCast(o, 31);
  if (this.size_0() != other.size_0()) {
    return false;
  }
  iter = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this);
  iterOther = other.iterator();
  while (iter.i < iter.this$0.size_0()) {
    elem = $next_0(iter);
    elemOther = $next_0(iterOther);
    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {
      return false;
    }
  }
  return true;
}

function getClass_109(){
  return Ljava_util_AbstractList_2_classLit;
}

function hashCode_9(){
  var iter, k, obj;
  k = 1;
  iter = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this);
  while (iter.i < iter.this$0.size_0()) {
    obj = $next_0(iter);
    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));
    k = ~~k;
  }
  return k;
}

function indexOutOfBounds(index, size){
  throw $IndexOutOfBoundsException(new IndexOutOfBoundsException(), 'Index: ' + index + ', Size: ' + size);
}

function iterator_2(){
  return $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this);
}

function AbstractList(){
}

_ = AbstractList.prototype = new AbstractCollection();
_.add_0 = add_2;
_.add = add_1;
_.equals$ = equals_8;
_.getClass$ = getClass_109;
_.hashCode$ = hashCode_9;
_.iterator = iterator_2;
_.typeId$ = 23;
function $ArrayList(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, 0, 0, 0, 0);
  this$static.size = 0;
  return this$static;
}

function $add_6(this$static, o){
  setCheck(this$static.array, this$static.size++, o);
  return true;
}

function $get_4(this$static, index){
  checkIndex(index, this$static.size);
  return this$static.array[index];
}

function $indexOf_2(this$static, o, index){
  for (; index < this$static.size; ++index) {
    if (equalsWithNullCheck(o, this$static.array[index])) {
      return index;
    }
  }
  return -1;
}

function $remove_6(this$static, index){
  var previous;
  previous = (checkIndex(index, this$static.size) , this$static.array[index]);
  this$static.array.splice(index, 1);
  --this$static.size;
  return previous;
}

function $remove_7(this$static, o){
  var i;
  i = $indexOf_2(this$static, o, 0);
  if (i == -1) {
    return false;
  }
  $remove_6(this$static, i);
  return true;
}

function $toArray(this$static, out){
  var i, a, result;
  if (out.length < this$static.size) {
    out = (a = out , result = createFromSeed(0, this$static.size) , initValues(a.arrayClass$, a.typeId$, a.queryId$, result) , result);
  }
  for (i = 0; i < this$static.size; ++i) {
    setCheck(out, i, this$static.array[i]);
  }
  if (out.length > this$static.size) {
    setCheck(out, this$static.size, null);
  }
  return out;
}

function add_4(o){
  return setCheck(this.array, this.size++, o) , true;
}

function add_3(index, o){
  if (index < 0 || index > this.size) {
    indexOutOfBounds(index, this.size);
  }
  this.array.splice(index, 0, o);
  ++this.size;
}

function contains_2(o){
  return $indexOf_2(this, o, 0) != -1;
}

function get_1(index){
  return checkIndex(index, this.size) , this.array[index];
}

function getClass_115(){
  return Ljava_util_ArrayList_2_classLit;
}

function size_2(){
  return this.size;
}

function ArrayList(){
}

_ = ArrayList.prototype = new AbstractList();
_.add_0 = add_4;
_.add = add_3;
_.contains = contains_2;
_.get = get_1;
_.getClass$ = getClass_115;
_.size_0 = size_2;
_.typeId$ = 24;
_.array = null;
_.size = 0;
function $ChangeListenerCollection(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, 0, 0, 0, 0);
  this$static.size = 0;
  return this$static;
}

function $fireChange(this$static){
  var listener, listener$iterator;
  for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this$static); listener$iterator.i < listener$iterator.this$0.size_0();) {
    listener = dynamicCast($next_0(listener$iterator), 14);
    $commitEdits(listener);
  }
}

function getClass_28(){
  return Lcom_google_gwt_user_client_ui_ChangeListenerCollection_2_classLit;
}

function ChangeListenerCollection(){
}

_ = ChangeListenerCollection.prototype = new ArrayList();
_.getClass$ = getClass_28;
_.typeId$ = 25;
function $ClickListenerCollection(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, 0, 0, 0, 0);
  this$static.size = 0;
  return this$static;
}

function $fireClick(this$static, sender){
  var listener, listener$iterator;
  for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this$static); listener$iterator.i < listener$iterator.this$0.size_0();) {
    listener = dynamicCast($next_0(listener$iterator), 15);
    listener.onClick(sender);
  }
}

function getClass_29(){
  return Lcom_google_gwt_user_client_ui_ClickListenerCollection_2_classLit;
}

function ClickListenerCollection(){
}

_ = ClickListenerCollection.prototype = new ArrayList();
_.getClass$ = getClass_29;
_.typeId$ = 26;
function $initWidget(this$static, widget){
  if (this$static.widget) {
    throw $IllegalStateException(new IllegalStateException(), 'Composite.initWidget() may only be called once.');
  }
  $removeFromParent(widget);
  $setElement(this$static, widget.element);
  this$static.widget = widget;
  $setParent(widget, this$static);
}

function $isAttached(this$static){
  if (this$static.widget) {
    return this$static.widget.isAttached();
  }
  return false;
}

function getClass_31(){
  return Lcom_google_gwt_user_client_ui_Composite_2_classLit;
}

function isAttached(){
  return $isAttached(this);
}

function onAttach(){
  this.widget.onAttach();
  this.element.__listener = this;
}

function onBrowserEvent(event_0){
  this.widget.onBrowserEvent(event_0);
}

function onDetach(){
  this.widget.onDetach();
}

function Composite(){
}

_ = Composite.prototype = new Widget();
_.getClass$ = getClass_31;
_.isAttached = isAttached;
_.onAttach = onAttach;
_.onBrowserEvent = onBrowserEvent;
_.onDetach = onDetach;
_.typeId$ = 27;
_.widget = null;
function $FlowPanel(this$static){
  this$static.children = $WidgetCollection(new WidgetCollection(), this$static);
  this$static.element = $doc.createElement('div');
  return this$static;
}

function $add_1(this$static, w){
  $add_0(this$static, w, this$static.element);
}

function getClass_32(){
  return Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit;
}

function FlowPanel(){
}

_ = FlowPanel.prototype = new ComplexPanel();
_.getClass$ = getClass_32;
_.typeId$ = 28;
function $clinit_70(){
  $clinit_70 = nullMethod;
  impl_0 = ($clinit_115() , implWidget);
}

function $addKeyboardListener(this$static, listener){
  if (!this$static.keyboardListeners) {
    this$static.keyboardListeners = $KeyboardListenerCollection(new KeyboardListenerCollection());
    sinkEvents(this$static.element, 896 | (this$static.element.__eventBits || 0));
  }
  $add_6(this$static.keyboardListeners, listener);
}

function $onBrowserEvent(this$static, event_0){
  switch ($eventGetTypeInt(event_0)) {
    case 128:
    case 512:
    case 256:
      if (this$static.keyboardListeners) {
        $fireKeyboardEvent(this$static.keyboardListeners, event_0);
      }

  }
}

function $setFocus(this$static, focused){
  if (focused) {
    impl_0.focus_0(this$static.element);
  }
   else {
    impl_0.blur_0(this$static.element);
  }
}

function getClass_33(){
  return Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit;
}

function onBrowserEvent_0(event_0){
  $onBrowserEvent(this, event_0);
}

function FocusWidget(){
}

_ = FocusWidget.prototype = new Widget();
_.getClass$ = getClass_33;
_.onBrowserEvent = onBrowserEvent_0;
_.typeId$ = 29;
_.keyboardListeners = null;
var impl_0;
function $Label_0(this$static, text){
  this$static.element = $doc.createElement('div');
  this$static.element['className'] = 'gwt-Label';
  $setInnerText(this$static.element, text);
  return this$static;
}

function $Label(this$static, element){
  this$static.element = element;
  return this$static;
}

function getClass_43(){
  return Lcom_google_gwt_user_client_ui_Label_2_classLit;
}

function onBrowserEvent_3(event_0){
  $eventGetTypeInt(event_0);
}

function Label(){
}

_ = Label.prototype = new Widget();
_.getClass$ = getClass_43;
_.onBrowserEvent = onBrowserEvent_3;
_.typeId$ = 30;
function $HTML(this$static, html){
  $Label(this$static, $doc.createElement('div'));
  this$static.element['className'] = 'gwt-HTML';
  this$static.element.innerHTML = html || '';
  return this$static;
}

function getClass_34(){
  return Lcom_google_gwt_user_client_ui_HTML_2_classLit;
}

function HTML(){
}

_ = HTML.prototype = new Label();
_.getClass$ = getClass_34;
_.typeId$ = 31;
function $clinit_76(){
  $clinit_76 = nullMethod;
  ALIGN_CENTER = $HasHorizontalAlignment$HorizontalAlignmentConstant(new HasHorizontalAlignment$HorizontalAlignmentConstant(), 'center');
  ALIGN_LEFT = $HasHorizontalAlignment$HorizontalAlignmentConstant(new HasHorizontalAlignment$HorizontalAlignmentConstant(), 'left');
  ALIGN_RIGHT = $HasHorizontalAlignment$HorizontalAlignmentConstant(new HasHorizontalAlignment$HorizontalAlignmentConstant(), 'right');
  ALIGN_DEFAULT = ALIGN_LEFT;
}

var ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT;
function $HasHorizontalAlignment$HorizontalAlignmentConstant(this$static, textAlignString){
  this$static.textAlignString = textAlignString;
  return this$static;
}

function getClass_35(){
  return Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit;
}

function HasHorizontalAlignment$HorizontalAlignmentConstant(){
}

_ = HasHorizontalAlignment$HorizontalAlignmentConstant.prototype = new Object_0();
_.getClass$ = getClass_35;
_.typeId$ = 0;
_.textAlignString = null;
function $clinit_80(){
  $clinit_80 = nullMethod;
  $HasVerticalAlignment$VerticalAlignmentConstant(new HasVerticalAlignment$VerticalAlignmentConstant(), 'bottom');
  ALIGN_MIDDLE = $HasVerticalAlignment$VerticalAlignmentConstant(new HasVerticalAlignment$VerticalAlignmentConstant(), 'middle');
  ALIGN_TOP = $HasVerticalAlignment$VerticalAlignmentConstant(new HasVerticalAlignment$VerticalAlignmentConstant(), 'top');
}

var ALIGN_MIDDLE, ALIGN_TOP;
function $HasVerticalAlignment$VerticalAlignmentConstant(this$static, verticalAlignString){
  this$static.verticalAlignString = verticalAlignString;
  return this$static;
}

function getClass_36(){
  return Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit;
}

function HasVerticalAlignment$VerticalAlignmentConstant(){
}

_ = HasVerticalAlignment$VerticalAlignmentConstant.prototype = new Object_0();
_.getClass$ = getClass_36;
_.typeId$ = 0;
_.verticalAlignString = null;
function $HorizontalPanel(this$static){
  $CellPanel(this$static);
  this$static.horzAlign = ($clinit_76() , ALIGN_DEFAULT);
  this$static.vertAlign = ($clinit_80() , ALIGN_TOP);
  this$static.tableRow = $doc.createElement('tr');
  this$static.body_0.appendChild(this$static.tableRow);
  this$static.table['cellSpacing'] = '0';
  this$static.table['cellPadding'] = '0';
  return this$static;
}

function $add_2(this$static, w){
  var td_0, td;
  td_0 = (td = $doc.createElement('td') , (td['align'] = this$static.horzAlign.textAlignString , undefined) , (td.style['verticalAlign'] = this$static.vertAlign.verticalAlignString , undefined) , td);
  this$static.tableRow.appendChild(td_0);
  $removeFromParent(w);
  $add_5(this$static.children, w);
  td_0.appendChild(w.element);
  $setParent(w, this$static);
}

function getClass_37(){
  return Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit;
}

function remove_1(w){
  var removed, td;
  td = $getParentElement(w.element);
  removed = $remove(this, w);
  if (removed) {
    this.tableRow.removeChild(td);
  }
  return removed;
}

function HorizontalPanel(){
}

_ = HorizontalPanel.prototype = new CellPanel();
_.getClass$ = getClass_37;
_.remove = remove_1;
_.typeId$ = 32;
_.tableRow = null;
function $Hyperlink_0(this$static, text, targetHistoryToken){
  this$static.element = $doc.createElement('div');
  this$static.element.appendChild(this$static.anchorElem = $doc.createElement('a'));
  sinkEvents(this$static.element, 1 | (this$static.element.__eventBits || 0));
  this$static.element['className'] = 'gwt-Hyperlink';
  $setInnerText(this$static.anchorElem, text);
  this$static.targetHistoryToken = targetHistoryToken;
  this$static.anchorElem['href'] = '#' + targetHistoryToken;
  return this$static;
}

function getClass_38(){
  return Lcom_google_gwt_user_client_ui_Hyperlink_2_classLit;
}

function onBrowserEvent_1(event_0){
  if ($eventGetTypeInt(event_0) == 1) {
    $clinit_45();
    newItem(this.targetHistoryToken, true);
    event_0.preventDefault();
  }
}

function Hyperlink(){
}

_ = Hyperlink.prototype = new Widget();
_.getClass$ = getClass_38;
_.onBrowserEvent = onBrowserEvent_1;
_.typeId$ = 33;
_.anchorElem = null;
_.targetHistoryToken = null;
function $clinit_87(){
  $clinit_87 = nullMethod;
  $clearImpl(new HashMap());
}

function $Image(this$static, url){
  $clinit_87();
  $Image$UnclippedState(new Image$UnclippedState(), this$static, url);
  this$static.element['className'] = 'gwt-Image';
  return this$static;
}

function $addClickListener(this$static, listener){
  if (!this$static.clickListeners) {
    this$static.clickListeners = $ClickListenerCollection(new ClickListenerCollection());
  }
  $add_6(this$static.clickListeners, listener);
}

function getClass_41(){
  return Lcom_google_gwt_user_client_ui_Image_2_classLit;
}

function onBrowserEvent_2(event_0){
  switch ($eventGetTypeInt(event_0)) {
    case 1:
      {
        if (this.clickListeners) {
          $fireClick(this.clickListeners, this);
        }
        break;
      }

  }
}

function Image_0(){
}

_ = Image_0.prototype = new Widget();
_.getClass$ = getClass_41;
_.onBrowserEvent = onBrowserEvent_2;
_.typeId$ = 34;
_.clickListeners = null;
function getClass_39(){
  return Lcom_google_gwt_user_client_ui_Image$State_2_classLit;
}

function Image$State(){
}

_ = Image$State.prototype = new Object_0();
_.getClass$ = getClass_39;
_.typeId$ = 0;
function $Image$UnclippedState(this$static, image, url){
  $replaceElement_0(image, $doc.createElement('img'));
  sinkEvents(image.element, 229501 | (image.element.__eventBits || 0));
  image.element.src = url;
  return this$static;
}

function getClass_40(){
  return Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit;
}

function Image$UnclippedState(){
}

_ = Image$UnclippedState.prototype = new Image$State();
_.getClass$ = getClass_40;
_.typeId$ = 0;
function $KeyboardListenerCollection(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, 0, 0, 0, 0);
  this$static.size = 0;
  return this$static;
}

function $fireKeyDown(this$static, keyCode){
  var listener, listener$iterator;
  for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this$static); listener$iterator.i < listener$iterator.this$0.size_0();) {
    listener = dynamicCast($next_0(listener$iterator), 14);
    $onKeyDown(listener, keyCode);
  }
}

function $fireKeyPress(this$static){
  var listener$iterator;
  for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this$static); listener$iterator.i < listener$iterator.this$0.size_0();) {
    dynamicCast($next_0(listener$iterator), 14);
  }
}

function $fireKeyUp(this$static){
  var listener, listener$iterator;
  for (listener$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), this$static); listener$iterator.i < listener$iterator.this$0.size_0();) {
    listener = dynamicCast($next_0(listener$iterator), 14);
    $commitEdits(listener);
  }
}

function $fireKeyboardEvent(this$static, event_0){
  (event_0.shiftKey?1:0) | (event_0.metaKey?8:0) | (event_0.ctrlKey?2:0) | (event_0.altKey?4:0);
  switch ($eventGetTypeInt(event_0)) {
    case 128:
      $fireKeyDown(this$static, (event_0.which || (event_0.keyCode || 0)) & 65535);
      break;
    case 512:
      $fireKeyUp(this$static, (event_0.which || (event_0.keyCode || 0)) & 65535);
      break;
    case 256:
      $fireKeyPress(this$static, (event_0.which || (event_0.keyCode || 0)) & 65535);
  }
}

function getClass_42(){
  return Lcom_google_gwt_user_client_ui_KeyboardListenerCollection_2_classLit;
}

function KeyboardListenerCollection(){
}

_ = KeyboardListenerCollection.prototype = new ArrayList();
_.getClass$ = getClass_42;
_.typeId$ = 35;
function $clinit_95(){
  $clinit_95 = nullMethod;
  rootPanels = $HashMap(new HashMap());
  widgetsToDetach = $HashSet(new HashSet());
}

function $RootPanel(this$static, elem){
  $clinit_95();
  this$static.children = $WidgetCollection(new WidgetCollection(), this$static);
  this$static.element = elem;
  $onAttach(this$static);
  return this$static;
}

function detachWidgets(){
  var outerIter, entry;
  $clinit_95();
  var widget, widget$iterator;
  for (widget$iterator = (outerIter = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $keySet(widgetsToDetach.map).val$entrySet.this$0) , $AbstractMap$1$1(new AbstractMap$1$1(), outerIter)); $hasNext(widget$iterator.val$outerIter.iter);) {
    widget = dynamicCast((entry = dynamicCast($next_0(widget$iterator.val$outerIter.iter), 2) , entry.getKey()), 16);
    if (widget.isAttached()) {
      widget.onDetach();
    }
  }
}

function get_0(id){
  $clinit_95();
  var elem, rp;
  rp = dynamicCast($get_3(rootPanels, id), 17);
  if (rp) {
    return rp;
  }
  elem = null;
  if (id != null) {
    if (!(elem = $doc.getElementById(id))) {
      return null;
    }
  }
  if (rootPanels.size == 0) {
    addWindowCloseListener(new RootPanel$1());
  }
  if (!elem) {
    rp = $RootPanel$DefaultRootPanel(new RootPanel$DefaultRootPanel());
  }
   else {
    rp = $RootPanel(new RootPanel(), elem);
  }
  $put_0(rootPanels, id, rp);
  $add_7(widgetsToDetach, rp);
  return rp;
}

function getClass_47(){
  return Lcom_google_gwt_user_client_ui_RootPanel_2_classLit;
}

function RootPanel(){
}

_ = RootPanel.prototype = new AbsolutePanel();
_.getClass$ = getClass_47;
_.typeId$ = 36;
var rootPanels, widgetsToDetach;
function getClass_45(){
  return Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit;
}

function onWindowClosed_0(){
  detachWidgets();
}

function onWindowClosing_0(){
  return null;
}

function RootPanel$1(){
}

_ = RootPanel$1.prototype = new Object_0();
_.getClass$ = getClass_45;
_.onWindowClosed = onWindowClosed_0;
_.onWindowClosing = onWindowClosing_0;
_.typeId$ = 37;
function $clinit_94(){
  $clinit_94 = nullMethod;
  $clinit_95();
}

function $RootPanel$DefaultRootPanel(this$static){
  $clinit_94();
  $RootPanel(this$static, $doc.body);
  return this$static;
}

function getClass_46(){
  return Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit;
}

function RootPanel$DefaultRootPanel(){
}

_ = RootPanel$DefaultRootPanel.prototype = new RootPanel();
_.getClass$ = getClass_46;
_.typeId$ = 38;
function $add_3(this$static, w){
  if (this$static.widget) {
    throw $IllegalStateException(new IllegalStateException(), 'SimplePanel can only contain one child widget');
  }
  $setWidget(this$static, w);
}

function $remove_0(this$static, w){
  if (this$static.widget != w) {
    return false;
  }
  $setParent(w, null);
  this$static.element.removeChild(w.element);
  this$static.widget = null;
  return true;
}

function $setWidget(this$static, w){
  if (w == this$static.widget) {
    return;
  }
  if (w) {
    $removeFromParent(w);
  }
  if (this$static.widget) {
    $remove_0(this$static, this$static.widget);
  }
  this$static.widget = w;
  if (w) {
    this$static.element.appendChild(this$static.widget.element);
    $setParent(w, this$static);
  }
}

function getClass_50(){
  return Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit;
}

function iterator_0(){
  return $SimplePanel$1(new SimplePanel$1(), this);
}

function remove_2(w){
  return $remove_0(this, w);
}

function SimplePanel(){
}

_ = SimplePanel.prototype = new Panel();
_.getClass$ = getClass_50;
_.iterator = iterator_0;
_.remove = remove_2;
_.typeId$ = 39;
_.widget = null;
function $ScrollPanel(this$static){
  this$static.element = $doc.createElement('div');
  this$static.element.style['overflow'] = 'auto';
  sinkEvents(this$static.element, 16384 | (this$static.element.__eventBits || 0));
  this$static.element.style['position'] = 'relative';
  return this$static;
}

function getClass_48(){
  return Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit;
}

function onBrowserEvent_4(event_0){
  $eventGetTypeInt(event_0) == 16384;
}

function ScrollPanel(){
}

_ = ScrollPanel.prototype = new SimplePanel();
_.getClass$ = getClass_48;
_.onBrowserEvent = onBrowserEvent_4;
_.typeId$ = 40;
function $SimplePanel$1(this$static, this$0){
  this$static.this$0 = this$0;
  this$static.hasElement = !!this$static.this$0.widget;
  return this$static;
}

function getClass_49(){
  return Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit;
}

function hasNext(){
  return this.hasElement;
}

function next_0(){
  if (!this.hasElement || !this.this$0.widget) {
    throw new NoSuchElementException();
  }
  this.hasElement = false;
  return this.this$0.widget;
}

function SimplePanel$1(){
}

_ = SimplePanel$1.prototype = new Object_0();
_.getClass$ = getClass_49;
_.hasNext = hasNext;
_.next = next_0;
_.typeId$ = 0;
_.this$0 = null;
function $clinit_108(){
  $clinit_108 = nullMethod;
  $clinit_70();
}

function $TextBoxBase(this$static, elem){
  $clinit_108();
  this$static.element = elem;
  impl_0.setTabIndex(this$static.element, 0);
  return this$static;
}

function $addChangeListener(this$static, listener){
  if (!this$static.changeListeners) {
    this$static.changeListeners = $ChangeListenerCollection(new ChangeListenerCollection());
    sinkEvents(this$static.element, 1024 | (this$static.element.__eventBits || 0));
  }
  $add_6(this$static.changeListeners, listener);
}

function $cancelKey(this$static){
  if (this$static.currentEvent) {
    this$static.currentEvent.preventDefault();
  }
}

function $setReadOnly(this$static, readOnly){
  this$static.element['readOnly'] = readOnly;
  if (readOnly) {
    $addStyleName(this$static, getStylePrimaryName(this$static.element) + '-' + 'readonly');
  }
   else {
    $removeStyleName(this$static, getStylePrimaryName(this$static.element) + '-' + 'readonly');
  }
}

function $setSelectionRange(this$static, pos, length){
  if (!this$static.attached) {
    return;
  }
  if (length < 0) {
    throw $IndexOutOfBoundsException(new IndexOutOfBoundsException(), 'Length must be a positive integer. Length: ' + length);
  }
  if (pos < 0 || length + pos > $getPropertyString(this$static.element, 'value').length) {
    throw $IndexOutOfBoundsException(new IndexOutOfBoundsException(), 'From Index: ' + pos + '  To Index: ' + (pos + length) + '  Text Length: ' + $getPropertyString(this$static.element, 'value').length);
  }
  $setSelectionRange_0(this$static.element, pos, length);
}

function $setText(this$static, text){
  this$static.element['value'] = text != null?text:'';
}

function getClass_52(){
  return Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit;
}

function onBrowserEvent_5(event_0){
  var type;
  type = $eventGetTypeInt(event_0);
  if ((type & 896) != 0) {
    this.currentEvent = event_0;
    $onBrowserEvent(this, event_0);
    this.currentEvent = null;
  }
   else if (type == 1024) {
    if (this.changeListeners) {
      $fireChange(this.changeListeners);
    }
  }
   else {
    $onBrowserEvent(this, event_0);
  }
}

function TextBoxBase(){
}

_ = TextBoxBase.prototype = new FocusWidget();
_.getClass$ = getClass_52;
_.onBrowserEvent = onBrowserEvent_5;
_.typeId$ = 41;
_.changeListeners = null;
_.currentEvent = null;
function $clinit_107(){
  $clinit_107 = nullMethod;
  $clinit_108();
}

function $TextArea(this$static){
  $clinit_107();
  $TextBoxBase(this$static, $doc.createElement('textarea'));
  this$static.element['className'] = 'gwt-TextArea';
  return this$static;
}

function getClass_51(){
  return Lcom_google_gwt_user_client_ui_TextArea_2_classLit;
}

function TextArea(){
}

_ = TextArea.prototype = new TextBoxBase();
_.getClass$ = getClass_51;
_.typeId$ = 42;
function $VerticalPanel(this$static){
  $CellPanel(this$static);
  this$static.horzAlign = ($clinit_76() , ALIGN_DEFAULT);
  this$static.vertAlign = ($clinit_80() , ALIGN_TOP);
  this$static.table['cellSpacing'] = '0';
  this$static.table['cellPadding'] = '0';
  return this$static;
}

function $add_4(this$static, w){
  var td_0, tr, td;
  tr = $doc.createElement('tr');
  td_0 = (td = $doc.createElement('td') , (td['align'] = this$static.horzAlign.textAlignString , undefined) , (td.style['verticalAlign'] = this$static.vertAlign.verticalAlignString , undefined) , td);
  tr.appendChild(td_0);
  this$static.body_0.appendChild(tr);
  $removeFromParent(w);
  $add_5(this$static.children, w);
  td_0.appendChild(w.element);
  $setParent(w, this$static);
}

function $remove_1(this$static, w){
  var removed, td;
  td = $getParentElement(w.element);
  removed = $remove(this$static, w);
  if (removed) {
    this$static.body_0.removeChild($getParentElement(td));
  }
  return removed;
}

function getClass_54(){
  return Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit;
}

function remove_3(w){
  return $remove_1(this, w);
}

function VerticalPanel(){
}

_ = VerticalPanel.prototype = new CellPanel();
_.getClass$ = getClass_54;
_.remove = remove_3;
_.typeId$ = 43;
function $WidgetCollection(this$static, parent){
  this$static.parent = parent;
  this$static.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, 0, 16, 4, 0);
  return this$static;
}

function $add_5(this$static, w){
  $insert(this$static, w, this$static.size);
}

function $get_2(this$static, index){
  if (index < 0 || index >= this$static.size) {
    throw new IndexOutOfBoundsException();
  }
  return this$static.array[index];
}

function $indexOf(this$static, w){
  var i;
  for (i = 0; i < this$static.size; ++i) {
    if (this$static.array[i] == w) {
      return i;
    }
  }
  return -1;
}

function $insert(this$static, w, beforeIndex){
  var i, newArray;
  if (beforeIndex < 0 || beforeIndex > this$static.size) {
    throw new IndexOutOfBoundsException();
  }
  if (this$static.size == this$static.array.length) {
    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, 0, 16, this$static.array.length * 2, 0);
    for (i = 0; i < this$static.array.length; ++i) {
      setCheck(newArray, i, this$static.array[i]);
    }
    this$static.array = newArray;
  }
  ++this$static.size;
  for (i = this$static.size - 1; i > beforeIndex; --i) {
    setCheck(this$static.array, i, this$static.array[i - 1]);
  }
  setCheck(this$static.array, beforeIndex, w);
}

function $remove_3(this$static, index){
  var i;
  if (index < 0 || index >= this$static.size) {
    throw new IndexOutOfBoundsException();
  }
  --this$static.size;
  for (i = index; i < this$static.size; ++i) {
    setCheck(this$static.array, i, this$static.array[i + 1]);
  }
  setCheck(this$static.array, this$static.size, null);
}

function $remove_4(this$static, w){
  var index;
  index = $indexOf(this$static, w);
  if (index == -1) {
    throw new NoSuchElementException();
  }
  $remove_3(this$static, index);
}

function getClass_56(){
  return Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit;
}

function WidgetCollection(){
}

_ = WidgetCollection.prototype = new Object_0();
_.getClass$ = getClass_56;
_.typeId$ = 0;
_.array = null;
_.parent = null;
_.size = 0;
function $WidgetCollection$WidgetIterator(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function $next(this$static){
  if (this$static.index_0 >= this$static.this$0.size) {
    throw new NoSuchElementException();
  }
  return this$static.this$0.array[++this$static.index_0];
}

function $remove_2(this$static){
  if (this$static.index_0 < 0 || this$static.index_0 >= this$static.this$0.size) {
    throw new IllegalStateException();
  }
  this$static.this$0.parent.remove(this$static.this$0.array[this$static.index_0--]);
}

function getClass_55(){
  return Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit;
}

function hasNext_0(){
  return this.index_0 < this.this$0.size - 1;
}

function next_1(){
  return $next(this);
}

function WidgetCollection$WidgetIterator(){
}

_ = WidgetCollection$WidgetIterator.prototype = new Object_0();
_.getClass$ = getClass_55;
_.hasNext = hasNext_0;
_.next = next_1;
_.typeId$ = 0;
_.index_0 = -1;
_.this$0 = null;
function $clinit_115(){
  $clinit_115 = nullMethod;
  implPanel = $FocusImplOld(new FocusImplOld());
  implWidget = implPanel?($clinit_115() , new FocusImpl()):implPanel;
}

function blur_0(elem){
  elem.blur();
}

function focus_0(elem){
  elem.focus();
}

function getClass_59(){
  return Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit;
}

function setTabIndex_0(elem, index){
  elem.tabIndex = index;
}

function FocusImpl(){
}

_ = FocusImpl.prototype = new Object_0();
_.blur_0 = blur_0;
_.focus_0 = focus_0;
_.getClass$ = getClass_59;
_.setTabIndex = setTabIndex_0;
_.typeId$ = 0;
var implPanel, implWidget;
function $clinit_114(){
  $clinit_114 = nullMethod;
  $clinit_115();
}

function $FocusImplOld(this$static){
  $clinit_114();
  $createBlurHandler();
  $createFocusHandler();
  $createMouseHandler();
  return this$static;
}

function $createBlurHandler(){
  return function(evt){
    if (this.parentNode.onblur) {
      this.parentNode.onblur(evt);
    }
  }
  ;
}

function $createFocusHandler(){
  return function(evt){
    if (this.parentNode.onfocus) {
      this.parentNode.onfocus(evt);
    }
  }
  ;
}

function $createMouseHandler(){
  return function(){
    this.firstChild.focus();
  }
  ;
}

function blur(elem){
  elem.firstChild.blur();
}

function focus(elem){
  elem.firstChild.focus();
}

function getClass_58(){
  return Lcom_google_gwt_user_client_ui_impl_FocusImplOld_2_classLit;
}

function setTabIndex(elem, index){
  elem.firstChild.tabIndex = index;
}

function FocusImplOld(){
}

_ = FocusImplOld.prototype = new FocusImpl();
_.blur_0 = blur;
_.focus_0 = focus;
_.getClass$ = getClass_58;
_.setTabIndex = setTabIndex;
_.typeId$ = 0;
function $getCursorPos(elem){
  try {
    return elem.selectionStart;
  }
   catch (e) {
    return 0;
  }
}

function $getSelectionLength(elem){
  try {
    return elem.selectionEnd - elem.selectionStart;
  }
   catch (e) {
    return 0;
  }
}

function $setSelectionRange_0(elem, pos, length){
  elem.setSelectionRange(pos, pos + length);
}

function $clinit_121(){
  $clinit_121 = nullMethod;
  progressMessageStack = $ArrayList(new ArrayList());
}

function $Documents(this$static){
  $clinit_121();
  this$static.menuView = $MenuView(new MenuView());
  this$static.titleView = $TitleView(new TitleView());
  this$static.contentContainerView = $ContentContainerView(new ContentContainerView());
  this$static.documentsView = $OpenContentView(new OpenContentView());
  this$static.documentView = $DocumentContentView(new DocumentContentView());
  this$static.revisionsView = $RevisionsContentView(new RevisionsContentView());
  this$static.revisionView = $RevisionContentView(new RevisionContentView());
  this$static.conflictsView = $ConflictsContentView(new ConflictsContentView());
  return this$static;
}

function $deleteAction(this$static){
  var $e0, builder, e;
  if (!$wnd.confirm('Are you sure that you want to delete the document "' + $getDisplayName(this$static.document_0) + '"? This action cannot be undone.'))
    return null;
  if (this$static.document_0.version == -1) {
    this$static.document_0 = null;
    $clinit_45();
    newItem('open', true);
    return null;
  }
  beginProgress('Deleting document...');
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , POST), '/v1/documents/' + this$static.document_0.id + '?version=' + this$static.document_0.version);
  $setHeader(builder, 'X-HTTP-Method-Override', 'DELETE');
  try {
    return $sendRequest(builder, '', $Documents$3(new Documents$3(), this$static));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't delete document\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function $goHome(this$static){
  if ($shouldCancelNavigation(this$static, true))
    return;
  $wnd.location.assign('/');
}

function $newAction(this$static){
  var document_0;
  if ($shouldCancelNavigation(this$static, true))
    return;
  document_0 = getDocumentForID('new', true);
  $setContent(document_0, '');
  document_0.name_0 = null;
  document_0.hasEdits = false;
  $openDocument(this$static, document_0);
}

function $onEventPreview(this$static, event_0){
  var ctrl, keyCode, meta, shortcut, type;
  keyCode = (event_0.which || (event_0.keyCode || 0)) & 65535;
  ctrl = !!event_0.ctrlKey;
  meta = !!event_0.metaKey;
  type = $eventGetTypeInt(event_0);
  shortcut = (ctrl || meta) && type == 128;
  if (shortcut) {
    if (this$static.contentContainerView.windowContentView == this$static.documentView && keyCode == 83) {
      $saveAction(this$static);
      return false;
    }
     else if (keyCode == 79) {
      $clinit_45();
      newItem('open', true);
      return false;
    }
  }
  return true;
}

function $onModuleLoad(this$static){
  sharedInstance = this$static;
  $setWindowTitlePath(this$static.titleView, 'Loading...', null);
  get_0('desktop').element.innerHTML = '';
  $add(get_0('desktop'), this$static.menuView);
  $add(get_0('desktop'), this$static.titleView);
  $add(get_0('desktop'), this$static.contentContainerView);
  addWindowResizeListener(this$static);
  ($clinit_55() , documentRoot).style.overflow = 'hidden';
  registerForOnBeforeUnload(this$static);
  addEventPreview(this$static);
  $onWindowResized(this$static, (documentRoot.clientWidth , documentRoot.clientHeight));
  refreshDocumentsFromServer(new Documents$1());
}

function $onWindowResized(this$static, height){
  $setHeight(this$static.contentContainerView, height - $getAbsoluteTop(this$static.contentContainerView.element) + 'px');
}

function $openAction(this$static){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = null;
  $setWindowContentView(this$static, this$static.documentsView);
}

function $openDocument(this$static, document_0){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = document_0;
  $setWindowContentView(this$static, this$static.documentView);
}

function $saveAction(this$static){
  var $e0, builder, e, initialExistsOnServer, jsonDocument;
  builder = null;
  jsonDocument = $JSONObject(new JSONObject());
  initialExistsOnServer = this$static.document_0.version != -1;
  if (initialExistsOnServer) {
    $put(jsonDocument, 'id', $JSONString(new JSONString(), this$static.document_0.id));
    $put(jsonDocument, 'version', $JSONNumber(new JSONNumber(), this$static.document_0.version));
  }
   else if (this$static.document_0.name_0 == null) {
    this$static.document_0.name_0 = $getDisplayName(this$static.document_0);
  }
  beginProgress('Saving document...');
  this$static.contentContainerView.windowContentView.commitEdits();
  if (this$static.document_0.name_0 != null)
    $put(jsonDocument, 'name', $JSONString(new JSONString(), this$static.document_0.name_0));
  if (this$static.document_0.content != null)
    $put(jsonDocument, 'content', $JSONString(new JSONString(), this$static.document_0.content));
  if (this$static.document_0.version != -1) {
    builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , POST), '/v1/documents/' + this$static.document_0.id);
    $setHeader(builder, 'X-HTTP-Method-Override', 'PUT');
  }
   else {
    builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , POST), '/v1/documents/');
  }
  try {
    return $sendRequest(builder, $toString_1(jsonDocument), $Documents$2(new Documents$2(), this$static, initialExistsOnServer));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't ave document\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function $setWindowContentView(this$static, aWindowContentView){
  $setWindowContentView_0(this$static.contentContainerView, aWindowContentView);
  $validateMenuItems(this$static.menuView);
}

function $shouldCancelNavigation(this$static, displayConfirm){
  var currentWindowContentView;
  currentWindowContentView = this$static.contentContainerView.windowContentView;
  if (!!this$static.document_0 && this$static.document_0.hasEdits || !!currentWindowContentView && currentWindowContentView.hasEdits_0()) {
    if (displayConfirm) {
      if ($wnd.confirm('Are you sure you want to leave this page?\n\nYour document has unsaved changes. If you leave this page without saving you will lose those changes.\n\nClick OK to continue, or Cancel to stay on this page.')) {
        return false;
      }
       else {
        return true;
      }
    }
    currentWindowContentView.commitEdits();
    return true;
  }
  return false;
}

function $showConflicts(this$static){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = null;
  $setWindowContentView(this$static, this$static.conflictsView);
}

function $showRevision(this$static, document_0, revision){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = document_0;
  this$static.revisionView.revision = revision;
  $setWindowContentView(this$static, this$static.revisionView);
}

function $showRevisions(this$static, document_0){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = document_0;
  $setWindowContentView(this$static, this$static.revisionsView);
}

function $showSharing(this$static, document_0){
  if ($shouldCancelNavigation(this$static, true))
    return;
  this$static.document_0 = document_0;
}

function $signOut(this$static){
  if ($shouldCancelNavigation(this$static, true))
    return;
  $wnd.location.assign($doc.getElementById('logout_url').getAttribute('content') || '');
}

function beginProgress(progressMessage){
  $clinit_121();
  if (progressMessage == null)
    progressMessage = '';
  $add_6(progressMessageStack, progressMessage);
  $wnd.status = progressMessage;
  if (progressMessageStack.size == 1) {
    sharedInstance.menuView.logo.element.src = $moduleBase + 'loading.gif';
    ($clinit_95() , $doc.body).style['cursor'] = 'progress';
  }
}

function endProgressWithAlert(alert){
  $clinit_121();
  $remove_6(progressMessageStack, progressMessageStack.size - 1);
  if (progressMessageStack.size == 0) {
    sharedInstance.menuView.logo.element.src = $moduleBase + 'logo.png';
    ($clinit_95() , $doc.body).style['cursor'] = '';
    $wnd.status = '';
  }
   else {
    $wnd.status = dynamicCast($get_4(progressMessageStack, progressMessageStack.size - 1), 1);
  }
  if (alert != null) {
    $wnd.alert(alert);
  }
}

function getClass_64(){
  return Lcom_hogbaysoftware_documents_client_Documents_2_classLit;
}

function registerForOnBeforeUnload(documents){
  $wnd.onbeforeunload = function(){
    var shouldCancelNavigation = documents.shouldCancelNavigation();
    if (shouldCancelNavigation == true) {
      return documents.shouldCancelNavigationConfirmMessage();
    }
  }
  ;
}

function shouldCancelNavigation_0(){
  return $shouldCancelNavigation(this, false);
}

function shouldCancelNavigationConfirmMessage(){
  return 'Your document has unsaved changes. If you leave this page without saving you will lose those changes.';
}

function Documents(){
}

_ = Documents.prototype = new Object_0();
_.getClass$ = getClass_64;
_.shouldCancelNavigation = shouldCancelNavigation_0;
_.shouldCancelNavigationConfirmMessage = shouldCancelNavigationConfirmMessage;
_.typeId$ = 44;
_.document_0 = null;
var progressMessageStack, sharedInstance = null;
function getClass_60(){
  return Lcom_hogbaysoftware_documents_client_Documents$1_2_classLit;
}

function onError(request, exception){
}

function onResponseReceived(request, response){
  $DocumentsHistory(new DocumentsHistory());
  if ($equalsIgnoreCase(($clinit_45() , impl?($clinit_59() , $wnd.__gwt_historyToken || ''):''), '')) {
    if (getDocuments().size == 0) {
      newItem('new', true);
    }
     else {
      newItem('open', true);
    }
  }
   else {
    fireHistoryChangedImpl(impl?($clinit_59() , $wnd.__gwt_historyToken || ''):'');
  }
}

function Documents$1(){
}

_ = Documents$1.prototype = new Object_0();
_.getClass$ = getClass_60;
_.onError = onError;
_.onResponseReceived = onResponseReceived;
_.typeId$ = 0;
function $Documents$2(this$static, this$0, val$initialExistsOnServer){
  this$static.this$0 = this$0;
  this$static.val$initialExistsOnServer = val$initialExistsOnServer;
  return this$static;
}

function getClass_61(){
  return Lcom_hogbaysoftware_documents_client_Documents$2_2_classLit;
}

function onError_0(request, e){
  endProgressWithAlert("Couldn't save document\n\n" + e);
}

function onResponseReceived_0(request, response){
  var $e0, document_0, e, jsonResponse;
  if (200 == response.val$xmlHttpRequest.status || 201 == response.val$xmlHttpRequest.status) {
    try {
      jsonResponse = parse(response.val$xmlHttpRequest.responseText).isObject();
      document_0 = this.this$0.document_0;
      $setVersion(document_0, ~~Math.max(Math.min($get_1(jsonResponse, 'version').isNumber().value, 2147483647), -2147483648));
      if ($get_1(jsonResponse, 'id')) {
        $setID(document_0, $get_1(jsonResponse, 'id').isString().value);
      }
      if ($get_1(jsonResponse, 'name')) {
        document_0.name_0 = $get_1(jsonResponse, 'name').isString().value;
      }
      if ($get_1(jsonResponse, 'content')) {
        $setContent(document_0, $get_1(jsonResponse, 'content').isString().value);
      }
      document_0.hasEdits = false;
      endProgressWithAlert(null);
      if (this.val$initialExistsOnServer) {
        $refreshFromModel(this.this$0.documentView);
      }
       else {
        $clinit_45();
        newItem(document_0.id, true);
      }
      if ($get_1(jsonResponse, 'conflicts')) {
        if ($wnd.confirm('Some of your edits conflict with recent changes made on TaskPaper.com. To resolve those conflicts now click the OK button.')) {
          $clinit_45();
          newItem('conflicts', true);
        }
      }
    }
     catch ($e0) {
      $e0 = caught($e0);
      if (instanceOf($e0, 23)) {
        e = $e0;
        endProgressWithAlert("Couldn't parse document\n\n" + e);
      }
       else 
        throw $e0;
    }
  }
   else {
    endProgressWithAlert("Couldn't save document (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function Documents$2(){
}

_ = Documents$2.prototype = new Object_0();
_.getClass$ = getClass_61;
_.onError = onError_0;
_.onResponseReceived = onResponseReceived_0;
_.typeId$ = 0;
_.this$0 = null;
_.val$initialExistsOnServer = false;
function $Documents$3(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function getClass_62(){
  return Lcom_hogbaysoftware_documents_client_Documents$3_2_classLit;
}

function onError_1(request, e){
  endProgressWithAlert("Couldn't delete document\n\n" + e);
}

function onResponseReceived_1(request, response){
  if (200 == response.val$xmlHttpRequest.status) {
    endProgressWithAlert(null);
    this.this$0.document_0 = null;
    $clinit_45();
    newItem('open', true);
  }
   else {
    endProgressWithAlert("Couldn't delete document (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function Documents$3(){
}

_ = Documents$3.prototype = new Object_0();
_.getClass$ = getClass_62;
_.onError = onError_1;
_.onResponseReceived = onResponseReceived_1;
_.typeId$ = 0;
_.this$0 = null;
function $DocumentsHistory(this$static){
  $clinit_45();
  $clinit_59();
  $add_6(historyListeners, this$static);
  return this$static;
}

function $onHistoryChanged(historyToken){
  var documents, historyTokens;
  documents = ($clinit_121() , sharedInstance);
  historyTokens = $split(historyToken, '/', 0);
  if ($equalsIgnoreCase(historyTokens[0], 'new') || $equalsIgnoreCase(historyTokens[0], '')) {
    $newAction(documents);
  }
   else if ($equalsIgnoreCase(historyTokens[0], 'open')) {
    $openAction(documents);
  }
   else if ($equalsIgnoreCase(historyTokens[0], 'conflicts')) {
    $showConflicts(documents);
  }
   else {
    if (historyTokens.length == 1) {
      $openDocument(documents, getDocumentForID(historyTokens[0], false));
    }
     else if ($equalsIgnoreCase(historyTokens[1], 'revisions')) {
      if (historyTokens.length == 3) {
        $showRevision(documents, getDocumentForID(historyTokens[0], false), historyTokens[2]);
      }
       else {
        $showRevisions(documents, getDocumentForID(historyTokens[0], false));
      }
    }
     else if ($equalsIgnoreCase(historyTokens[1], 'sharing')) {
      $showSharing(documents, getDocumentForID(historyTokens[0], false));
    }
  }
}

function getClass_63(){
  return Lcom_hogbaysoftware_documents_client_DocumentsHistory_2_classLit;
}

function DocumentsHistory(){
}

_ = DocumentsHistory.prototype = new Object_0();
_.getClass$ = getClass_63;
_.typeId$ = 45;
function $DiffMatchPatch(this$static){
  this$static.dmp = new $wnd.diff_match_patch();
  return this$static;
}

function getClass_65(){
  return Lcom_hogbaysoftware_documents_client_model_DiffMatchPatch_2_classLit;
}

function DiffMatchPatch(){
}

_ = DiffMatchPatch.prototype = new Object_0();
_.getClass$ = getClass_65;
_.typeId$ = 0;
_.dmp = null;
function $clinit_124(){
  $clinit_124 = nullMethod;
  idsToDocuments = $HashMap(new HashMap());
}

function $getDisplayName(this$static){
  var displayName, index;
  displayName = this$static.name_0;
  if (this$static.name_0 == null || this$static.name_0.length == 0) {
    if (this$static.content != null) {
      index = min(this$static.content.indexOf('\n'), 32);
      if (index > 0) {
        displayName = this$static.content.substr(0, index - 0);
      }
       else {
        displayName = this$static.content.substr(0, min(this$static.content.length, 32) - 0);
      }
      if (displayName.length == 0) {
        displayName = 'Untitled';
      }
    }
  }
  return displayName;
}

function $getRevision(this$static, key){
  if (this$static.revisions) {
    return dynamicCast($get_3(this$static.revisions, key), 5);
  }
  return null;
}

function $putRevision(this$static, key, revision){
  if (!this$static.revisions)
    this$static.revisions = $HashMap(new HashMap());
  $put_0(this$static.revisions, key, revision);
}

function $setContent(this$static, content){
  if (this$static.content != null && content != null && $equals_0(this$static.content, content))
    return false;
  this$static.content = content;
  return true;
}

function $setID(this$static, id){
  if (this$static.id != null) {
    $remove_5(idsToDocuments, this$static.id);
  }
  this$static.id = id;
  if (this$static.id != null) {
    $put_0(idsToDocuments, this$static.id, this$static);
  }
}

function $setVersion(this$static, version){
  if (this$static.version != version) {
    this$static.version = version;
    this$static.content = null;
  }
}

function getClass_67(){
  return Lcom_hogbaysoftware_documents_client_model_Document_2_classLit;
}

function getDocumentForID(id, shouldCreate){
  $clinit_124();
  var document_0;
  document_0 = dynamicCast($get_3(idsToDocuments, id), 24);
  if (!document_0 && shouldCreate) {
    document_0 = new Document_0();
    $setID(document_0, id);
    $put_0(idsToDocuments, id, document_0);
  }
  return document_0;
}

function getDocuments(){
  $clinit_124();
  var documents, entry, entry$iterator;
  documents = $ArrayList(new ArrayList());
  for (entry$iterator = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), idsToDocuments).this$0); $hasNext(entry$iterator.iter);) {
    entry = dynamicCast($next_0(entry$iterator.iter), 2);
    $add_6(documents, dynamicCast(entry.getValue(), 24));
  }
  return documents;
}

function refreshDocumentsFromServer(callback){
  $clinit_124();
  var $e0, builder, e;
  beginProgress('Loading documents...');
  $clearImpl(idsToDocuments);
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , GET), '/v1/documents');
  $setHeader(builder, 'Content-Type', 'application/json');
  try {
    return $sendRequest(builder, null, $Document$1(new Document$1(), callback));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't load documents\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function Document_0(){
}

_ = Document_0.prototype = new Object_0();
_.getClass$ = getClass_67;
_.typeId$ = 46;
_.content = '';
_.hasEdits = false;
_.id = null;
_.name_0 = null;
_.revisions = null;
_.version = -1;
var idsToDocuments;
function $Document$1(this$static, val$callback){
  this$static.val$callback = val$callback;
  return this$static;
}

function getClass_66(){
  return Lcom_hogbaysoftware_documents_client_model_Document$1_2_classLit;
}

function onError_2(request, e){
  endProgressWithAlert("Couldn't load documents\n\n" + e);
  this.val$callback.onError(request, e);
}

function onResponseReceived_2(request, response){
  var $e0, document_0, e, i, jsonDocument, jsonDocuments, size;
  if (200 == response.val$xmlHttpRequest.status) {
    try {
      jsonDocuments = parse(response.val$xmlHttpRequest.responseText).isArray();
      size = jsonDocuments.jsArray.length;
      if (size > 0) {
        for (i = 0; i < size; ++i) {
          jsonDocument = $get_0(jsonDocuments, i).isObject();
          document_0 = getDocumentForID($get_1(jsonDocument, 'id').isString().value, true);
          $setVersion(document_0, ~~Math.max(Math.min($get_1(jsonDocument, 'version').isNumber().value, 2147483647), -2147483648));
          document_0.name_0 = $get_1(jsonDocument, 'name').isString().value;
        }
      }
      endProgressWithAlert(null);
    }
     catch ($e0) {
      $e0 = caught($e0);
      if (instanceOf($e0, 23)) {
        e = $e0;
        endProgressWithAlert("Couldn't parse documents\n\n" + e);
      }
       else 
        throw $e0;
    }
  }
   else {
    endProgressWithAlert("Couldn't load documents (" + response.val$xmlHttpRequest.statusText + ')');
  }
  this.val$callback.onResponseReceived(request, response);
}

function Document$1(){
}

_ = Document$1.prototype = new Object_0();
_.getClass$ = getClass_66;
_.onError = onError_2;
_.onResponseReceived = onResponseReceived_2;
_.typeId$ = 0;
_.val$callback = null;
function $ConflictView(this$static, aConflict){
  var dmp, failedPatches, i, id, markAsResolved, name, panel, revision, td;
  this$static.mainPanel = $VerticalPanel(new VerticalPanel());
  $initWidget(this$static, this$static.mainPanel);
  setStyleName(this$static.mainPanel.element, 'conflict-view', true);
  this$static.conflict = aConflict;
  id = $get_1(this$static.conflict, 'id').isString().value;
  name = $get_1(this$static.conflict, 'name').isString().value;
  revision = '' + ~~Math.max(Math.min($get_1(this$static.conflict, 'version').isNumber().value, 2147483647), -2147483648);
  dmp = $DiffMatchPatch(new DiffMatchPatch());
  panel = $HorizontalPanel(new HorizontalPanel());
  $add_2(panel, $HTML(new HTML(), '<em>Document:<\/em> <a href="#' + id + '">' + name + '<\/a>'));
  markAsResolved = $MenuItemView_0(new MenuItemView(), 'Mark As Resolved', this$static);
  $add_2(panel, markAsResolved);
  $setCellHorizontalAlignment(panel, markAsResolved, ($clinit_76() , ALIGN_RIGHT));
  panel.element.style['width'] = '100%';
  $add_4(this$static.mainPanel, panel);
  td = $getParentElement(panel.element);
  td['width'] = '100%';
  $add_4(this$static.mainPanel, $HTML(new HTML(), '<em>Revision:<\/em> <a href="#' + id + '/revisions/' + revision + '">' + revision + '<\/a>'));
  failedPatches = dmp.dmp.patch_fromText($get_1(this$static.conflict, 'conflicts').isString().value);
  for (i = 0; i < failedPatches.length; ++i) {
    $add_4(this$static.mainPanel, $HTML(new HTML(), '<div class="conflict-diffs">' + dmp.dmp.diff_prettyHtml(failedPatches[i].diffs) + '<\/div>'));
  }
  return this$static;
}

function getClass_69(){
  return Lcom_hogbaysoftware_documents_client_views_ConflictView_2_classLit;
}

function onClick(sender){
  var $e0, builder, e, jsonDocument;
  beginProgress('Resolving conflict...');
  jsonDocument = $JSONObject(new JSONObject());
  $put(jsonDocument, 'conflicts_resolved', getInstance(true));
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , POST), '/v1/documents/' + $get_1(this.conflict, 'id').isString().value + '/edits/' + ~~Math.max(Math.min($get_1(this.conflict, 'version').isNumber().value, 2147483647), -2147483648));
  $setHeader(builder, 'X-HTTP-Method-Override', 'PUT');
  try {
    $sendRequest(builder, $toString_1(jsonDocument), new ConflictView$1());
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't resolve conflict\n\n" + e);
    }
     else 
      throw $e0;
  }
}

function ConflictView(){
}

_ = ConflictView.prototype = new Composite();
_.getClass$ = getClass_69;
_.onClick = onClick;
_.typeId$ = 47;
_.conflict = null;
function getClass_68(){
  return Lcom_hogbaysoftware_documents_client_views_ConflictView$1_2_classLit;
}

function onError_3(request, e){
  endProgressWithAlert("Couldn't resolve conflict\n\n" + e);
}

function onResponseReceived_3(request, response){
  if (200 == response.val$xmlHttpRequest.status) {
    endProgressWithAlert(null);
    $clinit_45();
    fireHistoryChangedImpl(impl?($clinit_59() , $wnd.__gwt_historyToken || ''):'');
  }
   else {
    endProgressWithAlert("Couldn't resolve conflict (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function ConflictView$1(){
}

_ = ConflictView$1.prototype = new Object_0();
_.getClass$ = getClass_68;
_.onError = onError_3;
_.onResponseReceived = onResponseReceived_3;
_.typeId$ = 0;
function $ContentContainerView(this$static){
  this$static.contentContainerPanel = $VerticalPanel(new VerticalPanel());
  $initWidget(this$static, this$static.contentContainerPanel);
  setStyleName(this$static.contentContainerPanel.element, 'content-container', true);
  return this$static;
}

function $setWindowContentView_0(this$static, aWindowContentView){
  var td_0, td;
  if (this$static.windowContentView) {
    setStyleName(this$static.windowContentView.element, 'content', false);
    $remove_1(this$static.contentContainerPanel, this$static.windowContentView);
    $viewDidHide(this$static.windowContentView);
  }
  this$static.windowContentView = aWindowContentView;
  if (this$static.windowContentView) {
    setStyleName(this$static.windowContentView.element, 'content', true);
    $add_4(this$static.contentContainerPanel, this$static.windowContentView);
    td_0 = $getParentElement(this$static.windowContentView.element);
    td_0['width'] = '100%';
    td = $getParentElement(this$static.windowContentView.element);
    td['height'] = '100%';
    this$static.windowContentView.viewDidShow();
  }
}

function getClass_70(){
  return Lcom_hogbaysoftware_documents_client_views_ContentContainerView_2_classLit;
}

function ContentContainerView(){
}

_ = ContentContainerView.prototype = new Composite();
_.getClass$ = getClass_70;
_.typeId$ = 48;
_.windowContentView = null;
function $MenuItemView(this$static){
  this$static.element = $doc.createElement('div');
  sinkEvents(this$static.element, 1 | (this$static.element.__eventBits || 0));
  this$static.element['className'] = 'menuItem';
  return this$static;
}

function $MenuItemView_0(this$static, text, clickListener){
  $MenuItemView(this$static);
  $setInnerText(this$static.element, text);
  $addClickListener_0(this$static, clickListener);
  return this$static;
}

function $MenuItemView_1(this$static, text, targetHistoryToken){
  $MenuItemView(this$static);
  $setInnerText(this$static.element, text);
  this$static.targetHistoryToken = targetHistoryToken;
  return this$static;
}

function $addClickListener_0(this$static, listener){
  if (!this$static.clickListeners) {
    this$static.clickListeners = $ClickListenerCollection(new ClickListenerCollection());
  }
  $add_6(this$static.clickListeners, listener);
}

function $setEnabled(this$static, enabled){
  if ($getPropertyString(this$static.element, 'className').indexOf('disabled') == -1 != enabled) {
    if (enabled) {
      setStyleName(this$static.element, 'disabled', false);
    }
     else {
      setStyleName(this$static.element, 'disabled', true);
    }
  }
}

function getClass_71(){
  return Lcom_hogbaysoftware_documents_client_views_MenuItemView_2_classLit;
}

function onBrowserEvent_7(event_0){
  if ($getPropertyString(this.element, 'className').indexOf('disabled') == -1) {
    if ($eventGetTypeInt(event_0) == 1) {
      if (this.clickListeners) {
        $fireClick(this.clickListeners, this);
      }
      if (this.targetHistoryToken != null) {
        if ($equalsIgnoreCase(($clinit_45() , impl?($clinit_59() , $wnd.__gwt_historyToken || ''):''), this.targetHistoryToken)) {
          fireHistoryChangedImpl(impl?($clinit_59() , $wnd.__gwt_historyToken || ''):'');
        }
         else {
          newItem(this.targetHistoryToken, true);
        }
      }
      event_0.preventDefault();
    }
  }
}

function MenuItemView(){
}

_ = MenuItemView.prototype = new Widget();
_.getClass$ = getClass_71;
_.onBrowserEvent = onBrowserEvent_7;
_.typeId$ = 49;
_.clickListeners = null;
_.targetHistoryToken = null;
function $MenuView(this$static){
  var spacer, td;
  this$static.logo = $Image(new Image_0(), $moduleBase + 'logo.png');
  this$static.newItem = $MenuItemView_1(new MenuItemView(), 'New', 'new');
  this$static.openItem = $MenuItemView_1(new MenuItemView(), 'Open', 'open');
  this$static.saveItem = $MenuItemView_0(new MenuItemView(), 'Save', this$static);
  this$static.deleteItem = $MenuItemView_0(new MenuItemView(), 'Delete', this$static);
  this$static.shareItem = $MenuItemView_1(new MenuItemView(), 'Share', 'share');
  this$static.revisionsItem = $MenuItemView_1(new MenuItemView(), 'Revisions', 'revisions');
  this$static.conflictsItem = $MenuItemView_1(new MenuItemView(), 'Conflicts', 'conflicts');
  this$static.signOutItem = $MenuItemView_0(new MenuItemView(), 'Sign Out', this$static);
  this$static.menuPanel = $HorizontalPanel(new HorizontalPanel());
  $initWidget(this$static, this$static.menuPanel);
  setStyleName(this$static.menuPanel.element, 'menu', true);
  setStyleName(this$static.logo.element, 'menuItem', true);
  $addClickListener(this$static.logo, this$static);
  $add_2(this$static.menuPanel, this$static.logo);
  $setCellHorizontalAlignment(this$static.menuPanel, this$static.logo, ($clinit_76() , ALIGN_CENTER));
  $setCellVerticalAlignment(this$static.menuPanel, this$static.logo, ($clinit_80() , ALIGN_MIDDLE));
  $add_2(this$static.menuPanel, this$static.newItem);
  $add_2(this$static.menuPanel, this$static.openItem);
  $add_2(this$static.menuPanel, this$static.saveItem);
  $add_2(this$static.menuPanel, this$static.deleteItem);
  $add_2(this$static.menuPanel, this$static.revisionsItem);
  $add_2(this$static.menuPanel, this$static.conflictsItem);
  spacer = $HTML(new HTML(), '<div><\/div>');
  $add_2(this$static.menuPanel, spacer);
  td = $getParentElement(spacer.element);
  td['width'] = '100%';
  $setTitle(this$static.signOutItem, 'jesse@hogbaysoftware.com');
  $add_2(this$static.menuPanel, this$static.signOutItem);
  return this$static;
}

function $validateMenuItems(this$static){
  var document_0;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  if (!document_0) {
    $setEnabled(this$static.saveItem, false);
    $setEnabled(this$static.deleteItem, false);
    $setEnabled(this$static.shareItem, false);
    $setEnabled(this$static.revisionsItem, false);
  }
   else {
    if ($split(($clinit_45() , impl?($clinit_59() , $wnd.__gwt_historyToken || ''):''), '/', 0).length == 1) {
      $setEnabled(this$static.saveItem, true);
      $setEnabled(this$static.deleteItem, true);
    }
     else {
      $setEnabled(this$static.saveItem, false);
      $setEnabled(this$static.deleteItem, false);
    }
    $setEnabled(this$static.shareItem, true);
    this$static.shareItem.targetHistoryToken = document_0.id + '/share';
    if (document_0.version != -1) {
      $setEnabled(this$static.revisionsItem, true);
      this$static.revisionsItem.targetHistoryToken = document_0.id + '/revisions';
    }
     else {
      $setEnabled(this$static.revisionsItem, false);
    }
  }
}

function getClass_72(){
  return Lcom_hogbaysoftware_documents_client_views_MenuView_2_classLit;
}

function onClick_0(sender){
  var documents;
  documents = ($clinit_121() , sharedInstance);
  if (sender == this.logo) {
    $goHome(documents);
  }
   else if (sender == this.saveItem) {
    $saveAction(documents);
  }
   else if (sender == this.deleteItem) {
    $deleteAction(documents);
  }
   else if (sender == this.signOutItem) {
    $signOut(documents);
  }
}

function MenuView(){
}

_ = MenuView.prototype = new Composite();
_.getClass$ = getClass_72;
_.onClick = onClick_0;
_.typeId$ = 50;
function $TitleView(this$static){
  this$static.titleBarPanel = $HorizontalPanel(new HorizontalPanel());
  this$static.titlePanel = $HorizontalPanel(new HorizontalPanel());
  $initWidget(this$static, this$static.titleBarPanel);
  setStyleName(this$static.titleBarPanel.element, 'title-bar', true);
  setStyleName(this$static.titlePanel.element, 'title', true);
  $add_2(this$static.titleBarPanel, this$static.titlePanel);
  $setCellHorizontalAlignment(this$static.titleBarPanel, this$static.titlePanel, ($clinit_76() , ALIGN_CENTER));
  return this$static;
}

function $setWindowTitlePath(this$static, pathComponent, pathAction){
  var pathActions, pathComponents;
  pathComponents = $ArrayList(new ArrayList());
  pathActions = $ArrayList(new ArrayList());
  setCheck(pathComponents.array, pathComponents.size++, pathComponent);
  setCheck(pathActions.array, pathActions.size++, pathAction);
  $setWindowTitlePath_1(this$static, pathComponents, pathActions);
}

function $setWindowTitlePath_0(this$static, pathComponent1, pathAction1, pathComponent2, pathAction2){
  var pathActions, pathComponents;
  pathComponents = $ArrayList(new ArrayList());
  pathActions = $ArrayList(new ArrayList());
  setCheck(pathComponents.array, pathComponents.size++, pathComponent1);
  setCheck(pathActions.array, pathActions.size++, pathAction1);
  setCheck(pathComponents.array, pathComponents.size++, pathComponent2);
  setCheck(pathActions.array, pathActions.size++, pathAction2);
  $setWindowTitlePath_1(this$static, pathComponents, pathActions);
}

function $setWindowTitlePath_1(this$static, pathComponents, pathActions){
  var document_0, first, i1, i2, pathAction, pathComponent;
  $clear(this$static.titlePanel);
  i1 = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), pathComponents);
  i2 = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), pathActions);
  first = true;
  while (i1.i < i1.this$0.size_0()) {
    pathComponent = dynamicCast($next_0(i1), 1);
    pathAction = $next_0(i2);
    if (first) {
      document_0 = ($clinit_121() , sharedInstance).document_0;
      if (!!document_0 && document_0.hasEdits) {
        pathComponent = '\u25C6 ' + pathComponent;
      }
      first = false;
    }
    if (pathAction != null && canCast(pathAction.typeId$, 15)) {
      $add_2(this$static.titlePanel, $MenuItemView_0(new MenuItemView(), pathComponent, dynamicCast(pathAction, 15)));
    }
     else if (pathAction != null && canCast(pathAction.typeId$, 1)) {
      $add_2(this$static.titlePanel, $MenuItemView_1(new MenuItemView(), pathComponent, dynamicCast(pathAction, 1)));
    }
     else {
      $add_2(this$static.titlePanel, $Label_0(new Label(), pathComponent));
    }
    if (i1.i < i1.this$0.size_0()) {
      $add_2(this$static.titlePanel, $HTML(new HTML(), '&nbsp;>&nbsp;'));
    }
  }
}

function getClass_73(){
  return Lcom_hogbaysoftware_documents_client_views_TitleView_2_classLit;
}

function TitleView(){
}

_ = TitleView.prototype = new Composite();
_.getClass$ = getClass_73;
_.typeId$ = 51;
function $spaceLastWidgetInPanel(panel){
  var w, td;
  if (panel.children.size > 0) {
    w = $getWidget(panel, panel.children.size - 1);
    td = $getParentElement(w.element);
    td['height'] = '100%';
    $setCellVerticalAlignment(panel, w, ($clinit_80() , ALIGN_TOP));
  }
}

function $viewDidHide(this$static){
  if (this$static.refreshFromServerRequest) {
    $cancel(this$static.refreshFromServerRequest);
  }
  this$static.refreshFromServerRequest = null;
}

function commitEdits(){
}

function getClass_76(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_ContentView_2_classLit;
}

function hasEdits(){
  return false;
}

function refreshFromServer_0(){
  return null;
}

function viewDidShow_0(){
  this.refreshFromServerRequest = this.refreshFromServer();
}

function ContentView(){
}

_ = ContentView.prototype = new Composite();
_.commitEdits = commitEdits;
_.getClass$ = getClass_76;
_.hasEdits_0 = hasEdits;
_.refreshFromServer = refreshFromServer_0;
_.viewDidShow = viewDidShow_0;
_.typeId$ = 52;
_.refreshFromServerRequest = null;
function $ConflictsContentView(this$static){
  this$static.scrollPanel = $ScrollPanel(new ScrollPanel());
  this$static.conflictsList = $VerticalPanel(new VerticalPanel());
  $initWidget(this$static, this$static.scrollPanel);
  this$static.conflictsList.element.style['width'] = '100%';
  setStyleName(this$static.conflictsList.element, 'scrolled-content', true);
  $add_3(this$static.scrollPanel, this$static.conflictsList);
  return this$static;
}

function $refreshFromServer(this$static){
  var $e0, builder, e;
  beginProgress('Loading conflicts...');
  $clear(this$static.conflictsList);
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , GET), '/v1/documents/conflicts');
  try {
    return $sendRequest(builder, null, $ConflictsContentView$1(new ConflictsContentView$1(), this$static));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't load conflicts\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function getClass_75(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_ConflictsContentView_2_classLit;
}

function refreshFromServer(){
  return $refreshFromServer(this);
}

function viewDidShow(){
  this.refreshFromServerRequest = $refreshFromServer(this);
  $setWindowTitlePath(($clinit_121() , sharedInstance).titleView, 'Conflicts', 'conflicts');
}

function ConflictsContentView(){
}

_ = ConflictsContentView.prototype = new ContentView();
_.getClass$ = getClass_75;
_.refreshFromServer = refreshFromServer;
_.viewDidShow = viewDidShow;
_.typeId$ = 53;
function $ConflictsContentView$1(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function getClass_74(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_ConflictsContentView$1_2_classLit;
}

function onError_4(request, e){
  endProgressWithAlert("Couldn't load conflicts\n\n" + e);
}

function onResponseReceived_4(request, response){
  var conflictView, i, jsonConflicts, size;
  if (200 == response.val$xmlHttpRequest.status) {
    jsonConflicts = parse(response.val$xmlHttpRequest.responseText).isArray();
    size = jsonConflicts.jsArray.length;
    if (size > 0) {
      $add_4(this.this$0.conflictsList, $HTML(new HTML(), '<strong>Your account has sync conflicts.<\/strong>'));
      $add_4(this.this$0.conflictsList, $HTML(new HTML(), '<ul><li>Green marks text that you added, but that could not be saved.<\/li><li>Red marks text that you removed, but that could not be deleted.<\/li><li>Review each conflict, and then mark it as resolved to remove it from this list.<\/li><\/ul>'));
      for (i = 0; i < size; ++i) {
        conflictView = $ConflictView(new ConflictView(), $get_0(jsonConflicts, i).isObject());
        conflictView.element.style['width'] = '100%';
        $add_4(this.this$0.conflictsList, conflictView);
      }
    }
     else {
      $add_4(this.this$0.conflictsList, $Label_0(new Label(), 'Your account has no sync conflicts.'));
    }
    $spaceLastWidgetInPanel(this.this$0.conflictsList);
    endProgressWithAlert(null);
  }
   else {
    endProgressWithAlert("Couldn't load conflicts (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function ConflictsContentView$1(){
}

_ = ConflictsContentView$1.prototype = new Object_0();
_.getClass$ = getClass_74;
_.onError = onError_4;
_.onResponseReceived = onResponseReceived_4;
_.typeId$ = 0;
_.this$0 = null;
function $DocumentContentView(this$static){
  this$static.textArea = $TextArea(new TextArea());
  $initWidget(this$static, this$static.textArea);
  $addChangeListener(this$static.textArea, this$static);
  $addKeyboardListener(this$static.textArea, this$static);
  return this$static;
}

function $commitEdits(this$static){
  var changedContent, displayName, document_0;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  displayName = $getDisplayName(document_0);
  changedContent = $setContent(document_0, $getPropertyString(this$static.textArea.element, 'value'));
  if (!$equals_0($getDisplayName(document_0), displayName) || changedContent && !document_0.hasEdits) {
    document_0.hasEdits = true;
    $refreshWindowTitlePath(this$static);
  }
}

function $onKeyDown(this$static, keyCode){
  var cursorPos, newText, selectionLength, text;
  if (keyCode == 9) {
    $cancelKey(this$static.textArea);
    cursorPos = $getCursorPos(this$static.textArea.element);
    selectionLength = $getSelectionLength(this$static.textArea.element);
    text = $getPropertyString(this$static.textArea.element, 'value');
    newText = text.substr(0, cursorPos - 0) + '\t' + $substring_0(text, cursorPos + selectionLength, text.length);
    $setText(this$static.textArea, newText);
    $setSelectionRange(this$static.textArea, cursorPos + 1, 0);
  }
   else {
  }
}

function $refreshFromModel(this$static){
  var document_0;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  if ($isAttached(this$static)) {
    $refreshWindowTitlePath(this$static);
  }
  $setText(this$static.textArea, document_0.content);
  $setFocus(this$static.textArea, true);
}

function $refreshFromServer_0(this$static){
  var $e0, builder, document_0, e;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  if (document_0.version == -1) {
    return null;
  }
  beginProgress('Loading document...');
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , GET), '/v1/documents/' + document_0.id);
  try {
    return $sendRequest(builder, null, $DocumentContentView$1(new DocumentContentView$1(), this$static));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't load document\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function $refreshWindowTitlePath(this$static){
  var documents;
  documents = ($clinit_121() , sharedInstance);
  $setWindowTitlePath(documents.titleView, $getDisplayName(documents.document_0), this$static);
}

function commitEdits_0(){
  $commitEdits(this);
}

function getClass_78(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_DocumentContentView_2_classLit;
}

function hasEdits_0(){
  var document_0;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  return !!document_0 && !$equals_0(document_0.content, $getPropertyString(this.textArea.element, 'value'));
}

function onClick_1(sender){
  var document_0, name;
  document_0 = ($clinit_121() , sharedInstance).document_0;
  name = $wnd.prompt('Rename Document:', $getDisplayName(document_0));
  if (name != null) {
    document_0.name_0 = name;
    document_0.hasEdits = true;
    $refreshWindowTitlePath(this);
  }
}

function refreshFromServer_1(){
  return $refreshFromServer_0(this);
}

function viewDidShow_1(){
  this.refreshFromServerRequest = $refreshFromServer_0(this);
  $refreshFromModel(this);
}

function DocumentContentView(){
}

_ = DocumentContentView.prototype = new ContentView();
_.commitEdits = commitEdits_0;
_.getClass$ = getClass_78;
_.hasEdits_0 = hasEdits_0;
_.onClick = onClick_1;
_.refreshFromServer = refreshFromServer_1;
_.viewDidShow = viewDidShow_1;
_.typeId$ = 54;
function $DocumentContentView$1(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function getClass_77(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_DocumentContentView$1_2_classLit;
}

function onError_5(request, e){
  endProgressWithAlert("Couldn't load document\n\n" + e);
}

function onResponseReceived_5(request, response){
  var $e0, document_0, e, jsonDocument;
  if (200 == response.val$xmlHttpRequest.status) {
    try {
      jsonDocument = parse(response.val$xmlHttpRequest.responseText).isObject();
      document_0 = getDocumentForID($get_1(jsonDocument, 'id').isString().value, true);
      $setVersion(document_0, ~~Math.max(Math.min($get_1(jsonDocument, 'version').isNumber().value, 2147483647), -2147483648));
      document_0.name_0 = $get_1(jsonDocument, 'name').isString().value;
      $setContent(document_0, $get_1(jsonDocument, 'content').isString().value);
      document_0.hasEdits = false;
      $refreshFromModel(this.this$0);
      endProgressWithAlert(null);
    }
     catch ($e0) {
      $e0 = caught($e0);
      if (instanceOf($e0, 23)) {
        e = $e0;
        endProgressWithAlert("Couldn't parse document\n\n" + e);
      }
       else 
        throw $e0;
    }
  }
   else {
    endProgressWithAlert("Couldn't load document (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function DocumentContentView$1(){
}

_ = DocumentContentView$1.prototype = new Object_0();
_.getClass$ = getClass_77;
_.onError = onError_5;
_.onResponseReceived = onResponseReceived_5;
_.typeId$ = 0;
_.this$0 = null;
function $OpenContentView(this$static){
  this$static.scrollPanel = $ScrollPanel(new ScrollPanel());
  this$static.documentsList = $VerticalPanel(new VerticalPanel());
  $initWidget(this$static, this$static.scrollPanel);
  $add_3(this$static.scrollPanel, this$static.documentsList);
  return this$static;
}

function getClass_80(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_OpenContentView_2_classLit;
}

function refreshFromServer_2(){
  return $clear(this.documentsList) , refreshDocumentsFromServer($OpenContentView$1(new OpenContentView$1(), this)) , null;
}

function viewDidShow_2(){
  this.refreshFromServerRequest = ($clear(this.documentsList) , refreshDocumentsFromServer($OpenContentView$1(new OpenContentView$1(), this)) , null);
  $setWindowTitlePath(($clinit_121() , sharedInstance).titleView, 'Open', 'open');
}

function OpenContentView(){
}

_ = OpenContentView.prototype = new ContentView();
_.getClass$ = getClass_80;
_.refreshFromServer = refreshFromServer_2;
_.viewDidShow = viewDidShow_2;
_.typeId$ = 55;
function $OpenContentView$1(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function getClass_79(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_OpenContentView$1_2_classLit;
}

function onError_6(request, exception){
}

function onResponseReceived_6(request, response){
  var documents, each, each$iterator;
  documents = getDocuments();
  if (documents.size == 0) {
    $add_4(this.this$0.documentsList, $Label_0(new Label(), 'Your account has no saved documents.'));
  }
   else {
    for (each$iterator = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), documents); each$iterator.i < each$iterator.this$0.size_0();) {
      each = dynamicCast($next_0(each$iterator), 24);
      $add_4(this.this$0.documentsList, $Hyperlink_0(new Hyperlink(), each.name_0, each.id));
    }
  }
  $spaceLastWidgetInPanel(this.this$0.documentsList);
}

function OpenContentView$1(){
}

_ = OpenContentView$1.prototype = new Object_0();
_.getClass$ = getClass_79;
_.onError = onError_6;
_.onResponseReceived = onResponseReceived_6;
_.typeId$ = 0;
_.this$0 = null;
function $RevisionContentView(this$static){
  this$static.revisionAttributes = $VerticalPanel(new VerticalPanel());
  $initWidget(this$static, this$static.revisionAttributes);
  return this$static;
}

function $refreshFromJSONRevision(this$static, jsonRevision){
  var contentTextArea, td_0, td;
  $clear(this$static.revisionAttributes);
  $add_4(this$static.revisionAttributes, $HTML(new HTML(), '<em>Revision:<\/em> ' + this$static.revision));
  $add_4(this$static.revisionAttributes, $HTML(new HTML(), '<em>Name:<\/em> ' + $get_1(jsonRevision, 'name').isString().value));
  $add_4(this$static.revisionAttributes, $HTML(new HTML(), '<em>Date:<\/em> ' + $split($get_1(jsonRevision, 'created').isString().value, '\\.', 0)[0]));
  $add_4(this$static.revisionAttributes, $HTML(new HTML(), '<hr />'));
  contentTextArea = $TextArea(new TextArea());
  $setText(contentTextArea, $get_1(jsonRevision, 'content').isString().value);
  $setReadOnly(contentTextArea, true);
  setStyleName(contentTextArea.element, 'content', true);
  $add_4(this$static.revisionAttributes, contentTextArea);
  td_0 = $getParentElement(contentTextArea.element);
  td_0['width'] = '100%';
  td = $getParentElement(contentTextArea.element);
  td['height'] = '100%';
}

function $refreshFromServer_2(this$static){
  var $e0, builder, document_0, e, jsonRevision;
  $clear(this$static.revisionAttributes);
  document_0 = ($clinit_121() , sharedInstance).document_0;
  if (document_0.version == -1) {
    return null;
  }
  jsonRevision = $getRevision(document_0, this$static.revision);
  if (jsonRevision) {
    $refreshFromJSONRevision(this$static, jsonRevision);
    return null;
  }
  beginProgress('Loading revision...');
  builder = $RequestBuilder(new RequestBuilder(), ($clinit_15() , GET), '/v1/documents/' + document_0.id + '/versions/' + this$static.revision);
  try {
    return $sendRequest(builder, null, $RevisionContentView$1(new RevisionContentView$1(), this$static, document_0));
  }
   catch ($e0) {
    $e0 = caught($e0);
    if (instanceOf($e0, 22)) {
      e = $e0;
      endProgressWithAlert("Couldn't load revision\n\n" + e);
    }
     else 
      throw $e0;
  }
  return null;
}

function getClass_82(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionContentView_2_classLit;
}

function refreshFromServer_3(){
  return $refreshFromServer_2(this);
}

function viewDidShow_3(){
  var document_0;
  this.refreshFromServerRequest = $refreshFromServer_2(this);
  document_0 = ($clinit_121() , sharedInstance).document_0;
  $setWindowTitlePath_0(sharedInstance.titleView, $getDisplayName(document_0), document_0.id, 'Revisions', document_0.id + '/revisions');
}

function RevisionContentView(){
}

_ = RevisionContentView.prototype = new ContentView();
_.getClass$ = getClass_82;
_.refreshFromServer = refreshFromServer_3;
_.viewDidShow = viewDidShow_3;
_.typeId$ = 56;
_.revision = null;
function $RevisionContentView$1(this$static, this$0, val$document){
  this$static.this$0 = this$0;
  this$static.val$document = val$document;
  return this$static;
}

function getClass_81(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionContentView$1_2_classLit;
}

function onError_7(request, e){
  endProgressWithAlert("Couldn't load revision\n\n" + e);
}

function onResponseReceived_7(request, response){
  var $e0, e, jsonRevision;
  if (200 == response.val$xmlHttpRequest.status) {
    try {
      jsonRevision = parse(response.val$xmlHttpRequest.responseText).isObject();
      $putRevision(this.val$document, this.this$0.revision, jsonRevision);
      $refreshFromJSONRevision(this.this$0, jsonRevision);
      endProgressWithAlert(null);
    }
     catch ($e0) {
      $e0 = caught($e0);
      if (instanceOf($e0, 23)) {
        e = $e0;
        endProgressWithAlert("Couldn't parse revision\n\n" + e);
      }
       else 
        throw $e0;
    }
  }
   else {
    endProgressWithAlert("Couldn't load revision (" + response.val$xmlHttpRequest.statusText + ')');
  }
}

function RevisionContentView$1(){
}

_ = RevisionContentView$1.prototype = new Object_0();
_.getClass$ = getClass_81;
_.onError = onError_7;
_.onResponseReceived = onResponseReceived_7;
_.typeId$ = 0;
_.this$0 = null;
_.val$document = null;
function $RevisionsContentView(this$static){
  this$static.scrollPanel = $ScrollPanel(new ScrollPanel());
  this$static.revisionsViewPanel = $FlowPanel(new FlowPanel());
  $initWidget(this$static, this$static.scrollPanel);
  setStyleName(this$static.revisionsViewPanel.element, 'scrolled-content', true);
  $add_3(this$static.scrollPanel, this$static.revisionsViewPanel);
  return this$static;
}

function $refreshFromServer_3(this$static){
  var baseHistoryToken, document_0, i, revisionLink, version;
  $clear(this$static.revisionsViewPanel);
  document_0 = ($clinit_121() , sharedInstance).document_0;
  version = document_0.version;
  if (version == -1) {
    $add_1(this$static.revisionsViewPanel, $Label_0(new Label(), 'This document has no saved versions.'));
    return null;
  }
  baseHistoryToken = document_0.id + '/revisions/';
  for (i = 0; i <= version; ++i) {
    if (i == version) {
      revisionLink = $Hyperlink_0(new Hyperlink(), version + ' (current)', baseHistoryToken + i);
    }
     else {
      revisionLink = $Hyperlink_0(new Hyperlink(), '' + i, baseHistoryToken + i);
    }
    setStyleName(revisionLink.element, 'revisionLink', true);
    $add_1(this$static.revisionsViewPanel, revisionLink);
  }
  return null;
}

function getClass_83(){
  return Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionsContentView_2_classLit;
}

function refreshFromServer_4(){
  return $refreshFromServer_3(this);
}

function viewDidShow_4(){
  var document_0;
  this.refreshFromServerRequest = $refreshFromServer_3(this);
  document_0 = ($clinit_121() , sharedInstance).document_0;
  $setWindowTitlePath_0(sharedInstance.titleView, $getDisplayName(document_0), document_0.id, 'Revisions', document_0.id + '/revisions');
}

function RevisionsContentView(){
}

_ = RevisionsContentView.prototype = new ContentView();
_.getClass$ = getClass_83;
_.refreshFromServer = refreshFromServer_4;
_.viewDidShow = viewDidShow_4;
_.typeId$ = 57;
function getClass_84(){
  return Ljava_lang_ArrayStoreException_2_classLit;
}

function ArrayStoreException(){
}

_ = ArrayStoreException.prototype = new RuntimeException();
_.getClass$ = getClass_84;
_.typeId$ = 59;
function $clinit_144(){
  $clinit_144 = nullMethod;
  $Boolean(new Boolean_0(), false);
  $Boolean(new Boolean_0(), true);
}

function $Boolean(this$static, value){
  $clinit_144();
  this$static.value = value;
  return this$static;
}

function equals_4(o){
  return o != null && canCast(o.typeId$, 29) && dynamicCast(o, 29).value == this.value;
}

function getClass_85(){
  return Ljava_lang_Boolean_2_classLit;
}

function hashCode_5(){
  return this.value?1231:1237;
}

function toString_9(){
  return this.value?'true':'false';
}

function Boolean_0(){
}

_ = Boolean_0.prototype = new Object_0();
_.equals$ = equals_4;
_.getClass$ = getClass_85;
_.hashCode$ = hashCode_5;
_.toString$ = toString_9;
_.typeId$ = 62;
_.value = false;
function createForArray(packageName, className){
  var clazz;
  clazz = new Class();
  clazz.typeName = packageName + className;
  clazz.modifiers = 4;
  return clazz;
}

function createForClass(packageName, className){
  var clazz;
  clazz = new Class();
  clazz.typeName = packageName + className;
  return clazz;
}

function getClass_87(){
  return Ljava_lang_Class_2_classLit;
}

function toString_10(){
  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;
}

function Class(){
}

_ = Class.prototype = new Object_0();
_.getClass$ = getClass_87;
_.toString$ = toString_10;
_.typeId$ = 0;
_.modifiers = 0;
_.typeName = null;
function getClass_86(){
  return Ljava_lang_ClassCastException_2_classLit;
}

function ClassCastException(){
}

_ = ClassCastException.prototype = new RuntimeException();
_.getClass$ = getClass_86;
_.typeId$ = 63;
function getClass_94(){
  return Ljava_lang_Number_2_classLit;
}

function Number_0(){
}

_ = Number_0.prototype = new Object_0();
_.getClass$ = getClass_94;
_.typeId$ = 64;
function $Double(this$static, value){
  this$static.value = value;
  return this$static;
}

function equals_5(o){
  return o != null && canCast(o.typeId$, 30) && dynamicCast(o, 30).value == this.value;
}

function getClass_88(){
  return Ljava_lang_Double_2_classLit;
}

function hashCode_6(){
  return ~~Math.max(Math.min(this.value, 2147483647), -2147483648);
}

function toString_11(){
  return '' + this.value;
}

function Double(){
}

_ = Double.prototype = new Number_0();
_.equals$ = equals_5;
_.getClass$ = getClass_88;
_.hashCode$ = hashCode_6;
_.toString$ = toString_11;
_.typeId$ = 65;
_.value = 0;
function $IllegalArgumentException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_90(){
  return Ljava_lang_IllegalArgumentException_2_classLit;
}

function IllegalArgumentException(){
}

_ = IllegalArgumentException.prototype = new RuntimeException();
_.getClass$ = getClass_90;
_.typeId$ = 66;
function $IllegalStateException(this$static, s){
  this$static.detailMessage = s;
  return this$static;
}

function getClass_91(){
  return Ljava_lang_IllegalStateException_2_classLit;
}

function IllegalStateException(){
}

_ = IllegalStateException.prototype = new RuntimeException();
_.getClass$ = getClass_91;
_.typeId$ = 67;
function $IndexOutOfBoundsException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_92(){
  return Ljava_lang_IndexOutOfBoundsException_2_classLit;
}

function IndexOutOfBoundsException(){
}

_ = IndexOutOfBoundsException.prototype = new RuntimeException();
_.getClass$ = getClass_92;
_.typeId$ = 68;
function toPowerOfTwoString(value, shift){
  var bitMask, buf, bufSize, digits, pos;
  bufSize = ~~(32 / shift);
  bitMask = (1 << shift) - 1;
  buf = initDim(_3C_classLit, 0, -1, bufSize, 1);
  digits = ($clinit_159() , digits_0);
  pos = bufSize - 1;
  if (value >= 0) {
    while (value > bitMask) {
      buf[pos--] = digits[value & bitMask];
      value >>= shift;
    }
  }
   else {
    while (pos > 0) {
      buf[pos--] = digits[value & bitMask];
      value >>= shift;
    }
  }
  buf[pos] = digits[value & bitMask];
  return __valueOf(buf, pos, bufSize);
}

function min(x, y){
  return x < y?x:y;
}

function $NullPointerException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_93(){
  return Ljava_lang_NullPointerException_2_classLit;
}

function NullPointerException(){
}

_ = NullPointerException.prototype = new RuntimeException();
_.getClass$ = getClass_93;
_.typeId$ = 69;
function $clinit_159(){
  $clinit_159 = nullMethod;
  digits_0 = initValues(_3C_classLit, 0, -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);
}

var digits_0;
function $equals_0(this$static, other){
  if (!(other != null && canCast(other.typeId$, 1))) {
    return false;
  }
  return String(this$static) == other;
}

function $equalsIgnoreCase(this$static, other){
  if (other == null)
    return false;
  return this$static == other || this$static.toLowerCase() == other.toLowerCase();
}

function $split(this$static, regex, maxMatch){
  var compiled = new RegExp(regex, 'g');
  var out = [];
  var count = 0;
  var trail = this$static;
  var lastTrail = null;
  while (true) {
    var matchObj = compiled.exec(trail);
    if (matchObj == null || (trail == '' || count == maxMatch - 1 && maxMatch > 0)) {
      out[count] = trail;
      break;
    }
     else {
      out[count] = trail.substring(0, matchObj.index);
      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);
      compiled.lastIndex = 0;
      if (lastTrail == trail) {
        out[count] = trail.substring(0, 1);
        trail = trail.substring(1);
      }
      lastTrail = trail;
      count++;
    }
  }
  if (maxMatch == 0) {
    var lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {
      --lastNonEmpty;
    }
    if (lastNonEmpty < out.length) {
      out.splice(lastNonEmpty, out.length - lastNonEmpty);
    }
  }
  var jr = initDim(_3Ljava_lang_String_2_classLit, 0, 1, out.length, 0);
  var i = 0;
  for (i = 0; i < out.length; ++i) {
    jr[i] = out[i];
  }
  return jr;
}

function $substring(this$static, beginIndex){
  return this$static.substr(beginIndex, this$static.length - beginIndex);
}

function $substring_0(this$static, beginIndex, endIndex){
  return this$static.substr(beginIndex, endIndex - beginIndex);
}

function $trim(this$static){
  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {
    return this$static;
  }
  var r1 = this$static.replace(/^(\s*)/, '');
  var r2 = r1.replace(/\s*$/, '');
  return r2;
}

function __valueOf(x, start, end){
  x = x.slice(start, end);
  return String.fromCharCode.apply(null, x);
}

function equals_7(other){
  return $equals_0(this, other);
}

function fromCodePoint(codePoint){
  var hiSurrogate, loSurrogate;
  if (codePoint >= 65536) {
    hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;
    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;
    return String.fromCharCode(hiSurrogate) + String.fromCharCode(loSurrogate);
  }
   else {
    return String.fromCharCode(codePoint & 65535);
  }
}

function getClass_99(){
  return Ljava_lang_String_2_classLit;
}

function hashCode_8(){
  return getHashCode_0(this);
}

function toString_15(){
  return this;
}

_ = String.prototype;
_.equals$ = equals_7;
_.getClass$ = getClass_99;
_.hashCode$ = hashCode_8;
_.toString$ = toString_15;
_.typeId$ = 2;
function $clinit_163(){
  $clinit_163 = nullMethod;
  back = {};
  front = {};
}

function compute(str){
  var hashCode, i, inc, n;
  n = str.length;
  inc = n < 64?1:~~(n / 32);
  hashCode = 0;
  for (i = 0; i < n; i += inc) {
    hashCode <<= 1;
    hashCode += str.charCodeAt(i);
  }
  hashCode |= 0;
  return hashCode;
}

function getHashCode_0(str){
  $clinit_163();
  var key = ':' + str;
  var result = front[key];
  if (result != null) {
    return result;
  }
  result = back[key];
  if (result == null) {
    result = compute(str);
  }
  increment();
  return front[key] = result;
}

function increment(){
  if (count_0 == 256) {
    back = front;
    front = {};
    count_0 = 0;
  }
  ++count_0;
}

var back, count_0 = 0, front;
function $StringBuffer(this$static){
  this$static.builder = $StringBuilder(new StringBuilder());
  return this$static;
}

function $append(this$static, x){
  $append_1(this$static.builder, '' + x);
  return this$static;
}

function $append_0(this$static, toAppend){
  $append_1(this$static.builder, toAppend);
  return this$static;
}

function getClass_97(){
  return Ljava_lang_StringBuffer_2_classLit;
}

function toString_13(){
  return $toString_2(this.builder);
}

function StringBuffer(){
}

_ = StringBuffer.prototype = new Object_0();
_.getClass$ = getClass_97;
_.toString$ = toString_13;
_.typeId$ = 70;
function $StringBuilder(this$static){
  this$static.stringArray = initDim(_3Ljava_lang_String_2_classLit, 0, 1, 0, 0);
  return this$static;
}

function $append_1(this$static, toAppend){
  var appendLength;
  if (toAppend == null) {
    toAppend = 'null';
  }
  appendLength = toAppend.length;
  if (appendLength > 0) {
    this$static.stringArray[this$static.arrayLen++] = toAppend;
    this$static.stringLength += appendLength;
    if (this$static.arrayLen > 1024) {
      $toString_2(this$static);
      this$static.stringArray.length = 1024;
    }
  }
  return this$static;
}

function $toString_2(this$static){
  var s;
  if (this$static.arrayLen != 1) {
    this$static.stringArray.length = this$static.arrayLen;
    s = this$static.stringArray.join('');
    this$static.stringArray = initValues(_3Ljava_lang_String_2_classLit, 0, 1, [s]);
    this$static.arrayLen = 1;
  }
  return this$static.stringArray[0];
}

function getClass_98(){
  return Ljava_lang_StringBuilder_2_classLit;
}

function toString_14(){
  return $toString_2(this);
}

function StringBuilder(){
}

_ = StringBuilder.prototype = new Object_0();
_.getClass$ = getClass_98;
_.toString$ = toString_14;
_.typeId$ = 71;
_.arrayLen = 0;
_.stringLength = 0;
function $UnsupportedOperationException(this$static, message){
  this$static.detailMessage = message;
  return this$static;
}

function getClass_101(){
  return Ljava_lang_UnsupportedOperationException_2_classLit;
}

function UnsupportedOperationException(){
}

_ = UnsupportedOperationException.prototype = new RuntimeException();
_.getClass$ = getClass_101;
_.typeId$ = 72;
function $keySet(this$static){
  var entrySet;
  entrySet = $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), this$static);
  return $AbstractMap$1(new AbstractMap$1(), this$static, entrySet);
}

function equals_10(obj){
  var entry, entry$iterator, otherKey, otherMap, otherValue;
  if ((obj == null?null:obj) === (this == null?null:this)) {
    return true;
  }
  if (!(obj != null && canCast(obj.typeId$, 32))) {
    return false;
  }
  otherMap = dynamicCast(obj, 32);
  if (dynamicCast(this, 32).size != otherMap.size) {
    return false;
  }
  for (entry$iterator = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), otherMap).this$0); $hasNext(entry$iterator.iter);) {
    entry = dynamicCast($next_0(entry$iterator.iter), 2);
    otherKey = entry.getKey();
    otherValue = entry.getValue();
    if (!(otherKey == null?dynamicCast(this, 32).nullSlotLive:otherKey != null && canCast(otherKey.typeId$, 1)?$hasStringValue(dynamicCast(this, 32), dynamicCast(otherKey, 1)):$hasHashValue(dynamicCast(this, 32), otherKey, ~~hashCode__devirtual$(otherKey)))) {
      return false;
    }
    if (!equalsWithNullCheck(otherValue, otherKey == null?dynamicCast(this, 32).nullSlot:otherKey != null && canCast(otherKey.typeId$, 1)?dynamicCast(this, 32).stringMap[':' + dynamicCast(otherKey, 1)]:$getHashValue(dynamicCast(this, 32), otherKey, ~~hashCode__devirtual$(otherKey)))) {
      return false;
    }
  }
  return true;
}

function getClass_113(){
  return Ljava_util_AbstractMap_2_classLit;
}

function hashCode_11(){
  var entry, entry$iterator, hashCode;
  hashCode = 0;
  for (entry$iterator = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), dynamicCast(this, 32)).this$0); $hasNext(entry$iterator.iter);) {
    entry = dynamicCast($next_0(entry$iterator.iter), 2);
    hashCode += entry.hashCode$();
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function toString_19(){
  var comma, entry, iter, s;
  s = '{';
  comma = false;
  for (iter = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $AbstractHashMap$EntrySet(new AbstractHashMap$EntrySet(), dynamicCast(this, 32)).this$0); $hasNext(iter.iter);) {
    entry = dynamicCast($next_0(iter.iter), 2);
    if (comma) {
      s += ', ';
    }
     else {
      comma = true;
    }
    s += '' + entry.getKey();
    s += '=';
    s += '' + entry.getValue();
  }
  return s + '}';
}

function AbstractMap(){
}

_ = AbstractMap.prototype = new Object_0();
_.equals$ = equals_10;
_.getClass$ = getClass_113;
_.hashCode$ = hashCode_11;
_.toString$ = toString_19;
_.typeId$ = 0;
function $addAllHashEntries(this$static, dest){
  var hashCodeMap = this$static.hashCodeMap;
  for (var hashCode in hashCodeMap) {
    if (hashCode == parseInt(hashCode)) {
      var array = hashCodeMap[hashCode];
      for (var i = 0, c = array.length; i < c; ++i) {
        dest.add_0(array[i]);
      }
    }
  }
}

function $addAllStringEntries(this$static, dest){
  var stringMap = this$static.stringMap;
  for (var key in stringMap) {
    if (key.charCodeAt(0) == 58) {
      var entry = new_$_1(this$static, key.substring(1));
      dest.add_0(entry);
    }
  }
}

function $clearImpl(this$static){
  this$static.hashCodeMap = [];
  this$static.stringMap = {};
  this$static.nullSlotLive = false;
  this$static.nullSlot = null;
  this$static.size = 0;
}

function $containsKey(this$static, key){
  return key == null?this$static.nullSlotLive:key != null && canCast(key.typeId$, 1)?$hasStringValue(this$static, dynamicCast(key, 1)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));
}

function $get_3(this$static, key){
  return key == null?this$static.nullSlot:key != null && canCast(key.typeId$, 1)?this$static.stringMap[':' + dynamicCast(key, 1)]:$getHashValue(this$static, key, ~~hashCode__devirtual$(key));
}

function $getHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        return entry.getValue();
      }
    }
  }
  return null;
}

function $hasHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        return true;
      }
    }
  }
  return false;
}

function $hasStringValue(this$static, key){
  return ':' + key in this$static.stringMap;
}

function $put_0(this$static, key, value){
  return key == null?$putNullSlot(this$static, value):key != null && canCast(key.typeId$, 1)?$putStringValue(this$static, dynamicCast(key, 1), value):$putHashValue(this$static, key, value, ~~hashCode__devirtual$(key));
}

function $putHashValue(this$static, key, value, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        var previous = entry.getValue();
        entry.setValue(value);
        return previous;
      }
    }
  }
   else {
    array = this$static.hashCodeMap[hashCode] = [];
  }
  var entry = $MapEntryImpl(new MapEntryImpl(), key, value);
  array.push(entry);
  ++this$static.size;
  return null;
}

function $putNullSlot(this$static, value){
  var result;
  result = this$static.nullSlot;
  this$static.nullSlot = value;
  if (!this$static.nullSlotLive) {
    this$static.nullSlotLive = true;
    ++this$static.size;
  }
  return result;
}

function $putStringValue(this$static, key, value){
  var result, stringMap = this$static.stringMap;
  key = ':' + key;
  if (key in stringMap) {
    result = stringMap[key];
  }
   else {
    ++this$static.size;
  }
  stringMap[key] = value;
  return result;
}

function $remove_5(this$static, key){
  return key == null?$removeNullSlot(this$static):key != null?$removeStringValue(this$static, key):$removeHashValue(this$static, key, ~~key.hashCode$());
}

function $removeHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        if (array.length == 1) {
          delete this$static.hashCodeMap[hashCode];
        }
         else {
          array.splice(i, 1);
        }
        --this$static.size;
        return entry.getValue();
      }
    }
  }
  return null;
}

function $removeNullSlot(this$static){
  var result;
  result = this$static.nullSlot;
  this$static.nullSlot = null;
  if (this$static.nullSlotLive) {
    this$static.nullSlotLive = false;
    --this$static.size;
  }
  return result;
}

function $removeStringValue(this$static, key){
  var result, stringMap = this$static.stringMap;
  key = ':' + key;
  if (key in stringMap) {
    result = stringMap[key];
    --this$static.size;
    delete stringMap[key];
  }
  return result;
}

function equalsBridge(value1, value2){
  return (value1 == null?null:value1) === (value2 == null?null:value2) || value1 != null && equals__devirtual$(value1, value2);
}

function getClass_107(){
  return Ljava_util_AbstractHashMap_2_classLit;
}

function AbstractHashMap(){
}

_ = AbstractHashMap.prototype = new AbstractMap();
_.equalsBridge = equalsBridge;
_.getClass$ = getClass_107;
_.typeId$ = 0;
_.hashCodeMap = null;
_.nullSlot = null;
_.nullSlotLive = false;
_.size = 0;
_.stringMap = null;
function equals_11(o){
  var iter, other, otherItem;
  if ((o == null?null:o) === (this == null?null:this)) {
    return true;
  }
  if (!(o != null && canCast(o.typeId$, 33))) {
    return false;
  }
  other = dynamicCast(o, 33);
  if (other.size_0() != this.size_0()) {
    return false;
  }
  for (iter = other.iterator(); iter.hasNext();) {
    otherItem = iter.next();
    if (!this.contains(otherItem)) {
      return false;
    }
  }
  return true;
}

function getClass_114(){
  return Ljava_util_AbstractSet_2_classLit;
}

function hashCode_12(){
  var hashCode, iter, next;
  hashCode = 0;
  for (iter = this.iterator(); iter.hasNext();) {
    next = iter.next();
    if (next != null) {
      hashCode += hashCode__devirtual$(next);
      hashCode = ~~hashCode;
    }
  }
  return hashCode;
}

function AbstractSet(){
}

_ = AbstractSet.prototype = new AbstractCollection();
_.equals$ = equals_11;
_.getClass$ = getClass_114;
_.hashCode$ = hashCode_12;
_.typeId$ = 73;
function $AbstractHashMap$EntrySet(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function contains_0(o){
  var entry, key, value;
  if (o != null && canCast(o.typeId$, 2)) {
    entry = dynamicCast(o, 2);
    key = entry.getKey();
    if ($containsKey(this.this$0, key)) {
      value = $get_3(this.this$0, key);
      return $equals_1(entry.getValue(), value);
    }
  }
  return false;
}

function getClass_104(){
  return Ljava_util_AbstractHashMap$EntrySet_2_classLit;
}

function iterator_1(){
  return $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), this.this$0);
}

function size_0(){
  return this.this$0.size;
}

function AbstractHashMap$EntrySet(){
}

_ = AbstractHashMap$EntrySet.prototype = new AbstractSet();
_.contains = contains_0;
_.getClass$ = getClass_104;
_.iterator = iterator_1;
_.size_0 = size_0;
_.typeId$ = 74;
_.this$0 = null;
function $AbstractHashMap$EntrySetIterator(this$static, this$0){
  var list;
  this$static.this$0 = this$0;
  list = $ArrayList(new ArrayList());
  if (this$static.this$0.nullSlotLive) {
    $add_6(list, $AbstractHashMap$MapEntryNull(new AbstractHashMap$MapEntryNull(), this$static.this$0));
  }
  $addAllStringEntries(this$static.this$0, list);
  $addAllHashEntries(this$static.this$0, list);
  this$static.iter = $AbstractList$IteratorImpl(new AbstractList$IteratorImpl(), list);
  return this$static;
}

function getClass_103(){
  return Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit;
}

function hasNext_1(){
  return $hasNext(this.iter);
}

function next_2(){
  return dynamicCast($next_0(this.iter), 2);
}

function AbstractHashMap$EntrySetIterator(){
}

_ = AbstractHashMap$EntrySetIterator.prototype = new Object_0();
_.getClass$ = getClass_103;
_.hasNext = hasNext_1;
_.next = next_2;
_.typeId$ = 0;
_.iter = null;
_.this$0 = null;
function equals_9(other){
  var entry;
  if (other != null && canCast(other.typeId$, 2)) {
    entry = dynamicCast(other, 2);
    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {
      return true;
    }
  }
  return false;
}

function getClass_112(){
  return Ljava_util_AbstractMapEntry_2_classLit;
}

function hashCode_10(){
  var keyHash, valueHash;
  keyHash = 0;
  valueHash = 0;
  if (this.getKey() != null) {
    keyHash = hashCode__devirtual$(this.getKey());
  }
  if (this.getValue() != null) {
    valueHash = hashCode__devirtual$(this.getValue());
  }
  return keyHash ^ valueHash;
}

function toString_18(){
  return this.getKey() + '=' + this.getValue();
}

function AbstractMapEntry(){
}

_ = AbstractMapEntry.prototype = new Object_0();
_.equals$ = equals_9;
_.getClass$ = getClass_112;
_.hashCode$ = hashCode_10;
_.toString$ = toString_18;
_.typeId$ = 75;
function $AbstractHashMap$MapEntryNull(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function getClass_105(){
  return Ljava_util_AbstractHashMap$MapEntryNull_2_classLit;
}

function getKey(){
  return null;
}

function getValue(){
  return this.this$0.nullSlot;
}

function setValue(object){
  return $putNullSlot(this.this$0, object);
}

function AbstractHashMap$MapEntryNull(){
}

_ = AbstractHashMap$MapEntryNull.prototype = new AbstractMapEntry();
_.getClass$ = getClass_105;
_.getKey = getKey;
_.getValue = getValue;
_.setValue = setValue;
_.typeId$ = 76;
_.this$0 = null;
function $AbstractHashMap$MapEntryString(this$static, key, this$0){
  this$static.this$0 = this$0;
  this$static.key = key;
  return this$static;
}

function getClass_106(){
  return Ljava_util_AbstractHashMap$MapEntryString_2_classLit;
}

function getKey_0(){
  return this.key;
}

function getValue_0(){
  return this.this$0.stringMap[':' + this.key];
}

function new_$_1(this$outer, key){
  return $AbstractHashMap$MapEntryString(new AbstractHashMap$MapEntryString(), key, this$outer);
}

function setValue_0(object){
  return $putStringValue(this.this$0, this.key, object);
}

function AbstractHashMap$MapEntryString(){
}

_ = AbstractHashMap$MapEntryString.prototype = new AbstractMapEntry();
_.getClass$ = getClass_106;
_.getKey = getKey_0;
_.getValue = getValue_0;
_.setValue = setValue_0;
_.typeId$ = 77;
_.key = null;
_.this$0 = null;
function $AbstractList$IteratorImpl(this$static, this$0){
  this$static.this$0 = this$0;
  return this$static;
}

function $hasNext(this$static){
  return this$static.i < this$static.this$0.size_0();
}

function $next_0(this$static){
  if (this$static.i >= this$static.this$0.size_0()) {
    throw new NoSuchElementException();
  }
  return this$static.this$0.get(this$static.i++);
}

function getClass_108(){
  return Ljava_util_AbstractList$IteratorImpl_2_classLit;
}

function hasNext_2(){
  return this.i < this.this$0.size_0();
}

function next_3(){
  return $next_0(this);
}

function AbstractList$IteratorImpl(){
}

_ = AbstractList$IteratorImpl.prototype = new Object_0();
_.getClass$ = getClass_108;
_.hasNext = hasNext_2;
_.next = next_3;
_.typeId$ = 0;
_.i = 0;
_.this$0 = null;
function $AbstractMap$1(this$static, this$0, val$entrySet){
  this$static.this$0 = this$0;
  this$static.val$entrySet = val$entrySet;
  return this$static;
}

function contains_1(key){
  return $containsKey(this.this$0, key);
}

function getClass_111(){
  return Ljava_util_AbstractMap$1_2_classLit;
}

function iterator_3(){
  var outerIter;
  return outerIter = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), this.val$entrySet.this$0) , $AbstractMap$1$1(new AbstractMap$1$1(), outerIter);
}

function size_1(){
  return this.val$entrySet.this$0.size;
}

function AbstractMap$1(){
}

_ = AbstractMap$1.prototype = new AbstractSet();
_.contains = contains_1;
_.getClass$ = getClass_111;
_.iterator = iterator_3;
_.size_0 = size_1;
_.typeId$ = 78;
_.this$0 = null;
_.val$entrySet = null;
function $AbstractMap$1$1(this$static, val$outerIter){
  this$static.val$outerIter = val$outerIter;
  return this$static;
}

function getClass_110(){
  return Ljava_util_AbstractMap$1$1_2_classLit;
}

function hasNext_3(){
  return $hasNext(this.val$outerIter.iter);
}

function next_4(){
  var entry;
  return entry = dynamicCast($next_0(this.val$outerIter.iter), 2) , entry.getKey();
}

function AbstractMap$1$1(){
}

_ = AbstractMap$1$1.prototype = new Object_0();
_.getClass$ = getClass_110;
_.hasNext = hasNext_3;
_.next = next_4;
_.typeId$ = 0;
_.val$outerIter = null;
function $HashMap(this$static){
  $clearImpl(this$static);
  return this$static;
}

function $equals_1(value1, value2){
  return (value1 == null?null:value1) === (value2 == null?null:value2) || value1 != null && equals__devirtual$(value1, value2);
}

function getClass_116(){
  return Ljava_util_HashMap_2_classLit;
}

function HashMap(){
}

_ = HashMap.prototype = new AbstractHashMap();
_.getClass$ = getClass_116;
_.typeId$ = 79;
function $HashSet(this$static){
  this$static.map = $HashMap(new HashMap());
  return this$static;
}

function $add_7(this$static, o){
  var old;
  old = $put_0(this$static.map, o, this$static);
  return old == null;
}

function add_5(o){
  var old;
  return old = $put_0(this.map, o, this) , old == null;
}

function contains_3(o){
  return $containsKey(this.map, o);
}

function getClass_117(){
  return Ljava_util_HashSet_2_classLit;
}

function iterator_4(){
  var outerIter;
  return outerIter = $AbstractHashMap$EntrySetIterator(new AbstractHashMap$EntrySetIterator(), $keySet(this.map).val$entrySet.this$0) , $AbstractMap$1$1(new AbstractMap$1$1(), outerIter);
}

function size_3(){
  return this.map.size;
}

function toString_20(){
  return $toString_4($keySet(this.map));
}

function HashSet(){
}

_ = HashSet.prototype = new AbstractSet();
_.add_0 = add_5;
_.contains = contains_3;
_.getClass$ = getClass_117;
_.iterator = iterator_4;
_.size_0 = size_3;
_.toString$ = toString_20;
_.typeId$ = 80;
_.map = null;
function $MapEntryImpl(this$static, key, value){
  this$static.key = key;
  this$static.value = value;
  return this$static;
}

function getClass_118(){
  return Ljava_util_MapEntryImpl_2_classLit;
}

function getKey_1(){
  return this.key;
}

function getValue_1(){
  return this.value;
}

function setValue_1(value){
  var old;
  old = this.value;
  this.value = value;
  return old;
}

function MapEntryImpl(){
}

_ = MapEntryImpl.prototype = new AbstractMapEntry();
_.getClass$ = getClass_118;
_.getKey = getKey_1;
_.getValue = getValue_1;
_.setValue = setValue_1;
_.typeId$ = 81;
_.key = null;
_.value = null;
function getClass_119(){
  return Ljava_util_NoSuchElementException_2_classLit;
}

function NoSuchElementException(){
}

_ = NoSuchElementException.prototype = new RuntimeException();
_.getClass$ = getClass_119;
_.typeId$ = 82;
function equalsWithNullCheck(a, b){
  return (a == null?null:a) === (b == null?null:b) || a != null && equals__devirtual$(a, b);
}

function init_0(){
  !!$stats && $stats({moduleName:$moduleName, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date()).getTime(), type:'onModuleLoadStart', className:'com.hogbaysoftware.documents.client.Documents'});
  $onModuleLoad($Documents(new Documents()));
}

function gwtOnLoad(errFn, modName, modBase){
  $moduleName = modName;
  $moduleBase = modBase;
  if (errFn)
    try {
      init_0();
    }
     catch (e) {
      errFn(modName);
    }
   else {
    init_0();
  }
}

function nullMethod(){
}

var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object'), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer'), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable'), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception'), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException'), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException'), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$'), Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client.', 'Request'), Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client.', 'Response'), Lcom_google_gwt_http_client_Request$1_2_classLit = createForClass('com.google.gwt.http.client.', 'Request$1'), Lcom_google_gwt_http_client_Request$2_2_classLit = createForClass('com.google.gwt.http.client.', 'Request$2'), Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder'), Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$Method'), Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestException'), Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestPermissionException'), Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestTimeoutException'), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;'), Lcom_google_gwt_json_client_JSONValue_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONValue'), Lcom_google_gwt_json_client_JSONArray_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONArray'), Lcom_google_gwt_json_client_JSONBoolean_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONBoolean'), Lcom_google_gwt_json_client_JSONException_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONException'), Lcom_google_gwt_json_client_JSONNull_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNull'), Lcom_google_gwt_json_client_JSONNumber_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNumber'), Lcom_google_gwt_json_client_JSONObject_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject'), Lcom_google_gwt_json_client_JSONString_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONString'), Lcom_google_gwt_user_client_impl_DocumentRootImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DocumentRootImpl'), _3Lcom_google_gwt_user_client_HistoryListener_2_classLit = createForArray('[Lcom.google.gwt.user.client.', 'HistoryListener;'), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl'), Lcom_google_gwt_user_client_impl_HistoryImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplStandard'), Lcom_google_gwt_user_client_impl_HistoryImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplMozilla'), Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FocusImpl'), Lcom_google_gwt_user_client_ui_impl_FocusImplOld_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FocusImplOld'), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject'), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget'), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel'), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel'), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel'), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget'), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel'), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection'), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList'), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList'), Lcom_google_gwt_user_client_ui_ChangeListenerCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ChangeListenerCollection'), Lcom_google_gwt_user_client_ui_ClickListenerCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ClickListenerCollection'), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite'), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel'), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel'), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label'), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML'), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant'), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant'), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel'), Lcom_google_gwt_user_client_ui_Hyperlink_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Hyperlink'), Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image'), Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State'), Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$UnclippedState'), Lcom_google_gwt_user_client_ui_KeyboardListenerCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'KeyboardListenerCollection'), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase'), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel'), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel'), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1'), Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollPanel'), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1'), Lcom_google_gwt_user_client_ui_TextArea_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextArea'), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel'), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;'), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection'), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator'), Lcom_google_gwt_user_client_Timer$1_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer$1'), Lcom_hogbaysoftware_documents_client_model_DiffMatchPatch_2_classLit = createForClass('com.hogbaysoftware.documents.client.model.', 'DiffMatchPatch'), Lcom_hogbaysoftware_documents_client_model_Document_2_classLit = createForClass('com.hogbaysoftware.documents.client.model.', 'Document'), Lcom_hogbaysoftware_documents_client_model_Document$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.model.', 'Document$1'), Lcom_hogbaysoftware_documents_client_views_windowcontent_ContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'ContentView'), Lcom_hogbaysoftware_documents_client_views_windowcontent_ConflictsContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'ConflictsContentView'), Lcom_hogbaysoftware_documents_client_views_windowcontent_ConflictsContentView$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'ConflictsContentView$1'), Lcom_hogbaysoftware_documents_client_views_windowcontent_DocumentContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'DocumentContentView'), Lcom_hogbaysoftware_documents_client_views_windowcontent_DocumentContentView$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'DocumentContentView$1'), Lcom_hogbaysoftware_documents_client_views_windowcontent_OpenContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'OpenContentView'), Lcom_hogbaysoftware_documents_client_views_windowcontent_OpenContentView$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'OpenContentView$1'), Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'RevisionContentView'), Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionContentView$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'RevisionContentView$1'), Lcom_hogbaysoftware_documents_client_views_windowcontent_RevisionsContentView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.windowcontent.', 'RevisionsContentView'), Lcom_hogbaysoftware_documents_client_views_ConflictView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'ConflictView'), Lcom_hogbaysoftware_documents_client_views_ConflictView$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'ConflictView$1'), Lcom_hogbaysoftware_documents_client_views_ContentContainerView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'ContentContainerView'), Lcom_hogbaysoftware_documents_client_views_MenuItemView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'MenuItemView'), Lcom_hogbaysoftware_documents_client_views_MenuView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'MenuView'), Lcom_hogbaysoftware_documents_client_views_TitleView_2_classLit = createForClass('com.hogbaysoftware.documents.client.views.', 'TitleView'), Lcom_hogbaysoftware_documents_client_Documents_2_classLit = createForClass('com.hogbaysoftware.documents.client.', 'Documents'), Lcom_hogbaysoftware_documents_client_Documents$1_2_classLit = createForClass('com.hogbaysoftware.documents.client.', 'Documents$1'), Lcom_hogbaysoftware_documents_client_Documents$2_2_classLit = createForClass('com.hogbaysoftware.documents.client.', 'Documents$2'), Lcom_hogbaysoftware_documents_client_Documents$3_2_classLit = createForClass('com.hogbaysoftware.documents.client.', 'Documents$3'), Lcom_hogbaysoftware_documents_client_DocumentsHistory_2_classLit = createForClass('com.hogbaysoftware.documents.client.', 'DocumentsHistory'), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException'), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException'), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean'), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number'), _3C_classLit = createForArray('', '[C'), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class'), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException'), Ljava_lang_Double_2_classLit = createForClass('java.lang.', 'Double'), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException'), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException'), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException'), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String'), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer'), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder'), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException'), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;'), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap'), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap'), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet'), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet'), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator'), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry'), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull'), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString'), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl'), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1'), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1'), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap'), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet'), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl'), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException');
